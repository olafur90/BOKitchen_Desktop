<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Auth0.ManagementApi</name>
    </assembly>
    <members>
        <member name="T:Auth0.ManagementApi.Clients.ActionsClient">
            <summary>
            Contains methods to access the /actions endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetAllAsync(Auth0.ManagementApi.Models.Actions.GetActionsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve all actions.
            </summary>
            <param name="request">Specifies criteria to use when querying actions.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the actions.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an action by its ID.
            </summary>
            <param name="id">The ID of the action to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved action.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.CreateAsync(Auth0.ManagementApi.Models.Actions.CreateActionRequest,System.Threading.CancellationToken)">
            <summary>
            Create an action.
            </summary>
            <remarks>
            Once an action is created, it must be deployed, and then bound to a trigger before it will be executed as part of a flow.
            </remarks>
            <param name="request">Specifies criteria to use when creating an action.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Actions.Action"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.Actions.UpdateActionRequest,System.Threading.CancellationToken)">
            <summary>
            Update an existing action.
            </summary>
            <remarks>
            If this action is currently bound to a trigger, updating it will not affect any user flows until the action is deployed.
            </remarks>
            <param name="id">The id of the action to update.</param>
            <param name="request">Specifies criteria to use when updating an action.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Actions.Action"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.DeleteAsync(System.String,Auth0.ManagementApi.Models.Actions.DeleteActionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an action and all of its associated versions.
            </summary>
            <remarks>
            An action must be unbound from all triggers before it can be deleted.
            </remarks>
            <param name="id">The ID of the action to delete.</param>
            <param name="request">Specifies criteria to use when deleting an action.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetAllTriggersAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the set of triggers currently available within actions. A trigger is an extensibility point to which actions can be bound
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list containing the triggers.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetExecutionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific execution of a trigger.
            </summary>
            <remarks>
            Relevant execution IDs will be included in tenant logs generated as part of that authentication flow.
            Executions will only be stored for 10 days after their creation.
            </remarks>
            <param name="id">The ID of the execution to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved execution.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetAllVersionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve all versions of an action.
            </summary>
            <remarks>
            An action version is created whenever an action is deployed. An action version is immutable, once created.
            </remarks>
            <param name="actionId">The ID of the action.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved versions of the specified action.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetVersionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a specific version of an action.
            </summary>
            <remarks>
            An action version is created whenever an action is deployed. An action version is immutable, once created.
            </remarks>
            <param name="actionId">The ID of the action.</param>
            <param name="versionId">The ID of the action version.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved version of the specified action.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.GetAllTriggerBindingsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve the actions that are bound to a trigger.
            </summary>
            <remarks>
            Once an action is created and deployed, it must be attached (i.e. bound) to a trigger so that it will be executed as part of a flow.
            The list of actions returned reflects the order in which they will be executed during the appropriate flow.
            </remarks>
            <param name="triggerId">An actions extensibility point.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved trigger bindings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.UpdateTriggerBindingsAsync(System.String,Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingsRequest,System.Threading.CancellationToken)">
            <summary>
            Update the actions that are bound (i.e. attached) to a trigger.
            Once an action is created and deployed, it must be attached(i.e.bound) to a trigger so that it will be executed as part of a flow.
            The order in which the actions are provided will determine the order in which they are executed.
            </summary>
            <param name="triggerId">An actions extensibility point.</param>
            <param name="request">Specifies criteria to use when updating the trigger bindings.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The trigger bindings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.DeployAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deploy an action.
            </summary>
            <remarks>
            Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger,
            then the system will begin executing the newly deployed version of the action immediately.Otherwise, the action will only be executed as a part of a flow once it is bound to that flow.
            </remarks>
            <param name="id">The ID of the action to deploy.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The action version that was created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ActionsClient.RollbackToVersionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs the equivalent of a roll-back of an action to an earlier, specified version.
            </summary>
            <remarks>
            Creates a new, deployed action version that is identical to the specified version.
            If this action is currently bound to a trigger, the system will begin executing the newly-created version immediately.
            </remarks>
            <param name="actionId">The ID of the action.</param>
            <param name="versionId">The ID of the version to deploy.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.AttackProtectionClient.GetSuspiciousIpThrottlingAsync(System.Threading.CancellationToken)">
            <summary>
            Get the suspicious IP throttling configuration.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling"/> containing the configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.AttackProtectionClient.UpdateSuspiciousIpThrottlingAsync(Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling,System.Threading.CancellationToken)">
            <summary>
            Update the suspicious IP throttling configuration.
            </summary>
            <param name="request">Specifies criteria to use when updating the configuration.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.AttackProtectionClient.GetBreachedPasswordDetectionAsync(System.Threading.CancellationToken)">
            <summary>
            Get breached password detection settings.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="F:Auth0.ManagementApi.Clients.AttackProtectionClient.BreachedPasswordDetection"/> containing the configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.AttackProtectionClient.UpdateBreachedPasswordDetectionAsync(Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection,System.Threading.CancellationToken)">
            <summary>
            Update breached password detection settings.
            </summary>
            <param name="request">Specifies criteria to use when updating the configuration.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="F:Auth0.ManagementApi.Clients.AttackProtectionClient.BreachedPasswordDetection"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.AttackProtectionClient.GetBruteForceProtectionAsync(System.Threading.CancellationToken)">
            <summary>
            Get the brute force configuration.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="F:Auth0.ManagementApi.Clients.AttackProtectionClient.BruteForceProtection"/> containing the configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.AttackProtectionClient.UpdateBruteForceProtectionAsync(Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection,System.Threading.CancellationToken)">
            <summary>
            Update the brute force configuration.
            </summary>
            <param name="request">Specifies criteria to use when updating the configuration.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="F:Auth0.ManagementApi.Clients.AttackProtectionClient.BruteForceProtection"/> that was updated.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.BaseClient">
            <summary>
            Base class from which all Client classes inherit.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Clients.BaseClient.Connection">
            <summary>
            <see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Clients.BaseClient.BaseUri">
            <summary>
            <see cref="T:System.Uri"/> of the endpoint to use in making API calls.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Clients.BaseClient.DefaultHeaders">
            <summary>
            Default headers included with every request this client makes.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BaseClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.BaseClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BaseClient.BuildUri(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Build the <see cref="T:System.Uri"/> for this API request given a <paramref name="resource"/> and
            <paramref name="queryStrings"/>.
            </summary>
            <param name="resource">Name of the resource to be appended to the path.</param>
            <param name="queryStrings">Query strings that should be combined with the URL.</param>
            <returns>Completed absolute URI for the request.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BaseClient.EncodePath(System.String)">
            <summary>
            Encode a value so it can be successfully used in the path.
            </summary>
            <param name="value">Value to encode for the path.</param>
            <returns>URI encoded/escaped value that can be used in the path.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.BlacklistedTokensClient">
            <summary>
            Contains methods to access the /blacklists/tokens endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BlacklistedTokensClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.BlacklistedTokensClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BlacklistedTokensClient.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the blacklisted claims.
            </summary>
            <param name="aud">The JWT's aud claim. The client_id of the client for which it was issued.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.BlacklistedToken"/> objects.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BlacklistedTokensClient.CreateAsync(Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Blacklists a JWT token.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest"/> containing the information of the token to blacklist.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous create operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.BrandingClient">
            <summary>
            Contains methods to access the /branding endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BrandingClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.BrandingClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BrandingClient.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves branding settings for a tenant.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Branding"/> containing the branding for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BrandingClient.UpdateAsync(Auth0.ManagementApi.Models.BrandingUpdateRequest,System.Threading.CancellationToken)">
            <summary>s
            Updates the branding for a tenant.
            </summary>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.BrandingUpdateRequest" /> containing the branding information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Branding"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BrandingClient.GetUniversalLoginTemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the template for the New Universal Login Experience.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UniversalLoginTemplate"/> for the new universal login experience.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BrandingClient.DeleteUniversalLoginTemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Delete the template for the New Universal Login Experience
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.BrandingClient.SetUniversalLoginTemplateAsync(Auth0.ManagementApi.Models.UniversalLoginTemplateUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the template for the New Universal Login Experience.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UniversalLoginTemplateUpdateRequest"/> containing details of the template to set.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.UniversalLoginTemplate"/>.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ClientGrantsClient">
            <summary>
            Contains methods to access the /client-grants endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.ClientGrantsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.CreateAsync(Auth0.ManagementApi.Models.ClientGrantCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new client grant.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientGrantCreateRequest"/> containing the properties of the Client Grant.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a client grant.
            </summary>
            <param name="id">The identifier of the Client Grant to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.GetAllAsync(Auth0.ManagementApi.Models.GetClientGrantsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the client grants.
            </summary>
            <param name="request">Specifies criteria to use when querying client grants.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the client grants requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientGrantUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a client grant.
            </summary>
            <param name="id">The identifier of the client grant to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientGrantUpdateRequest"/> containing the properties to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/> that has been updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.GetAllOrganizationsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the organizations associated to a client grant
            </summary>
            <param name="id">The identifier of the client grant.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.GetAllOrganizationsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get the organizations associated to a client grant
            </summary>
            <param name="id">The identifier of the client grant.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientGrantsClient.GetAllOrganizationsAsync(System.String,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get the organizations associated to a client grant
            </summary>
            <param name="id">The identifier of the client grant.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations requested.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ClientsClient">
            <summary>
            Contains methods to access the /clients endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.ClientsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.CreateAsync(Auth0.ManagementApi.Models.ClientCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new client application.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientCreateRequest"/> containing the properties of the new client.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Client"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a client and all its related assets (like rules, connections, etc) given its id.
            </summary>
            <param name="id">The id of the client to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.GetAllAsync(Auth0.ManagementApi.Models.GetClientsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all client applications.
            </summary>
            <param name="request">Specifies criteria to use when querying clients.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the clients.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves a client by its id.
            </summary>
            <param name="id">The id of the client to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
            true if the fields specified are to be included in the result, false otherwise (defaults to
            true)
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Client"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.RotateClientSecret(System.String,System.Threading.CancellationToken)">
            <summary>
            Rotate a client secret. The generated secret is NOT base64 encoded.
            </summary>
            <param name="id">The id of the client which secret needs to be rotated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Client"/> that has had its secret rotated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a client application.
            </summary>
            <param name="id">The id of the client you want to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientUpdateRequest"/> containing the properties of the client you want to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Client"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.CreateCredentialAsync(System.String,Auth0.ManagementApi.Models.ClientCredentialCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new client credential.
            </summary>
            <param name="clientId">The id of the client for which you want to create the credential.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientCredentialCreateRequest"/> containing the properties of the new client credential.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Credential"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.UpdateCredentialAsync(System.String,System.String,Auth0.ManagementApi.Models.ClientCredentialUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a client credential.
            </summary>
            <param name="clientId">The id of the client for which you want to update the credential.</param>
            <param name="credentialId">The id of the credential to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientCredentialUpdateRequest"/> containing the properties of the new client credential.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Credential"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.GetAllCredentialsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all credentials for a client.
            </summary>
            <param name="clientId">The id of the client for which you want to retrieve the credentials.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IList`1"/> containing the client's credentials.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.GetCredentialAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific credential for a client.
            </summary>
            <param name="clientId">The id of the client for which you want to retrieve the credential.</param>
            <param name="credentialId">The id of the credential to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Credential"/> containing the client's credential.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ClientsClient.DeleteCredentialAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific credential registered with the provided client.
            </summary>
            <param name="clientId">The id of the client for which you want to remove the credential.</param>
            <param name="credentialId">The id of the credential to remove.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ConnectionsClient">
            <summary>
            Contains methods to access the /connections endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Clients.ConnectionsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.CreateAsync(Auth0.ManagementApi.Models.ConnectionCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new connection according to the request.
            </summary>
            <param name="request">The request containing the properties for the new connection.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Connection"/> containing the newly created Connection.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a connection and all its users.
            </summary>
            <param name="id">The id of the connection to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.DeleteUserAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified connection user by its <paramref name="email"/>.
            </summary>
            <remarks>
            Currently only database connections are supported and you cannot delete all users from specific connection.
            </remarks>
            <param name="id">The identifier of the connection.</param>
            <param name="email">The email of the user to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves a connection by its <paramref name="id"/>.
            </summary>
            <param name="id">The id of the connection to retrieve.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to true).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Connection"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.GetAllAsync(Auth0.ManagementApi.Models.GetConnectionsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves every connection matching the specified strategy. All connections are retrieved if no strategy is being specified. Accepts a list of fields to include or exclude in the resulting list of connection objects.
            </summary>
            <param name="request">Specifies criteria to use when querying connections.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of connections.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ConnectionUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a connection.
            </summary>
            <param name="id">The id of the connection to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ConnectionUpdateRequest"/> containing the properties of the connection you wish to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Connection"/> that has been updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ConnectionsClient.CheckStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status of an ad/ldap connection.
            </summary>
            <param name="id">ID of the connection to check.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous check operation. Will throw if the check fails.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.CustomDomainsClient">
            <summary>
            Contains methods to access the /custom-domains endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.CustomDomainsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.CustomDomainsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.CustomDomainsClient.CreateAsync(Auth0.ManagementApi.Models.CustomDomainCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new custom domain and returns it.
            </summary>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.CustomDomainCreateRequest"/> representing the new domain.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.CustomDomain"/> containing the newly created custom domain.</returns>
            <remarks>The custom domain will need to be verified before it starts accepting requests.</remarks>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.CustomDomainsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a custom domain by its ID.
            </summary>
            <param name="id">The ID of the domain to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asyncronous delete operation.</returns>
            <remarks>When deleted, Auth0 will stop serving requests for this domain.</remarks>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.CustomDomainsClient.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the status of every custom domain.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing the details of every custom domain.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.CustomDomainsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a custom domain status by its ID
            </summary>
            <param name="id">The ID of the domain to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.CustomDomain"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.CustomDomainsClient.VerifyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Run the verification process for the custom domain.
            </summary>
            <param name="id">The ID of the domain to verify.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.CustomDomainVerification"/> that was requested.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.DeviceCredentialsClient">
            <summary>
            Contains methods to access the /device-credentials endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.DeviceCredentialsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.GetAllAsync(System.String,System.Boolean,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the device credentials.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be excluded from the result, false otherwise (defaults to true).</param>
            <param name="userId">The user id of the devices to retrieve.</param>
            <param name="clientId">The client id of the devices to retrieve.</param>
            <param name="type">The type of credentials.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/> which conforms to the criteria specified.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.GetAllAsync(Auth0.ManagementApi.Models.GetDeviceCredentialsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the device credentials.
            </summary>
            <param name="request">Specifies criteria to use when querying device credentials.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/> which conforms to the criteria specified.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.CreateAsync(Auth0.ManagementApi.Models.DeviceCredentialCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new device credential.
            </summary>
            <param name="request">The request containing the details of the device credential to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.DeviceCredentialsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a device credential.
            </summary>
            <param name="id">The id of the device credential to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.EmailProviderClient">
            <summary>
            Contains methods to access the /emails/provider endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.EmailProviderClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.ConfigureAsync(Auth0.ManagementApi.Models.EmailProviderConfigureRequest,System.Threading.CancellationToken)">
            <summary>
            Configures the email provider.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.EmailProviderConfigureRequest" /> containing the configuration properties of the
            provider.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the email provider.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.GetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the email provider.
            </summary>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve: name, enabled, settings fields.
            </param>
            <param name="includeFields">
            True if the fields specified are to be excluded from the result, false otherwise (defaults
            to true).
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailProviderClient.UpdateAsync(Auth0.ManagementApi.Models.EmailProviderUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the email provider.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.EmailProviderUpdateRequest" /> containing the configuration properties of the
            email provider.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.EmailTemplatesClient">
            <summary>
            Contains methods to access the /email-templates endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailTemplatesClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new instance of <see cref="T:Auth0.ManagementApi.Clients.EmailTemplatesClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailTemplatesClient.CreateAsync(Auth0.ManagementApi.Models.EmailTemplateCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new email template.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailTemplateCreateRequest"/> containing details of the template to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailTemplatesClient.GetAsync(Auth0.ManagementApi.Models.EmailTemplateName,System.Threading.CancellationToken)">
            <summary>
            Gets an email template.
            </summary>
            <param name="templateName">The name of email template you wish to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailTemplatesClient.PatchAsync(Auth0.ManagementApi.Models.EmailTemplateName,Auth0.ManagementApi.Models.EmailTemplatePatchRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an email template.
            </summary>
            <param name="templateName">The name of the email template to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailTemplatePatchRequest"/> containing details of the template to patch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.EmailTemplatesClient.UpdateAsync(Auth0.ManagementApi.Models.EmailTemplateName,Auth0.ManagementApi.Models.EmailTemplateUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an email template.
            </summary>
            <param name="templateName">The name of the email template to patch.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailTemplateUpdateRequest"/> containing details of the template to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GrantsClient.DeleteAllAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GrantsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GrantsClient.GetAllAsync(Auth0.ManagementApi.Models.Grants.GetGrantsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.GuardianClient">
            <summary>
            Contains methods to access the /guardian endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.GuardianClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.CreateEnrollmentTicketAsync(Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an email with a link to start the Guardian enrollment process.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest" /> containing the information about the user who should be enrolled.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse" /> with the details of the ticket that was created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.DeleteEnrollmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an enrollment.
            </summary>
            <param name="id">The ID of the enrollment to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.GetEnrollmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an enrollment.
            </summary>
            <param name="id">The ID of the enrollment to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianEnrollment"/> containing details of the enrollment.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.GetFactorsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves all factors. Useful to check factor enablement and trial status.
            </summary>
            <returns>List of <see cref="T:Auth0.ManagementApi.Models.GuardianFactor" /> instances with the available factors.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.GetSmsTemplatesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves enrollment and verification templates. You can use it to check the current values for your templates.
            </summary>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the templates.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.GetSnsConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Returns provider configuration for AWS SNS.
            </summary>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSnsConfiguration" /> containing Amazon SNS configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.GetTwilioConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Returns configuration for the Guardian Twilio provider.
            </summary>
            <returns><see cref="T:Auth0.ManagementApi.Models.GuardianTwilioConfiguration" /> with the Twilio configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.UpdateFactorAsync(Auth0.ManagementApi.Models.UpdateGuardianFactorRequest,System.Threading.CancellationToken)">
            <summary>
            Enable or Disable a Guardian factor.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianFactorRequest" /> containing the details of the factor to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianFactorResponse" /> indicating the status of the factor.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.UpdateSmsTemplatesAsync(Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates,System.Threading.CancellationToken)">
            <summary>
            Updates enrollment and verification templates. Useful to send custom messages on SMS enrollment and verification.
            </summary>
            <param name="templates">A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the updated templates.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the templates.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.UpdateTwilioConfigurationAsync(Auth0.ManagementApi.Models.UpdateGuardianTwilioConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Configure the Guardian Twilio provider.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianTwilioConfigurationRequest" /> containing the configuration settings.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.GuardianTwilioConfiguration" /> containing the updated configuration settings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.GetPhoneMessageTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the enabled phone factors for multi-factor authentication
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes" /> containing the message types.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.GuardianClient.UpdatePhoneMessageTypesAsync(Auth0.ManagementApi.Models.GuardianPhoneMessageTypes,System.Threading.CancellationToken)">
            <summary>
            Update enabled phone factors for multi-factor authentication
            </summary>
            <param name="messageTypes">A <see cref="T:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes" /> containing the list of phone factors to enable on the tenan.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes" /> containing the message types.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.HooksClient">
            <summary>
            Contains methods to access the /hooks endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.HooksClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.HooksClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.HooksClient.CreateAsync(Auth0.ManagementApi.Models.HookCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new hook according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.HookCreateRequest" /> containing the details of the hook to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Hook" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.HooksClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a hook.
            </summary>
            <param name="id">The ID of the hook to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.HooksClient.GetAllAsync(Auth0.ManagementApi.Models.GetHooksRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all hooks.
            </summary>
            <param name="request">Specifies criteria to use when querying hooks.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the hooks requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.HooksClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a hook by its ID.
            </summary>
            <param name="id">The ID of the hook to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include, empty to retrieve all fields.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Hook" /> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.HooksClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.HookUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a hook.
            </summary>
            <param name="id">The ID of the hook to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.HookUpdateRequest" /> containing the information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Hook"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetAllAsync(Auth0.ManagementApi.Models.Actions.GetActionsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve all actions.
            </summary>
            <param name="request">Specifies criteria to use when querying actions.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the actions.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve an action by its ID.
            </summary>
            <param name="id">The ID of the action to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved action.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.CreateAsync(Auth0.ManagementApi.Models.Actions.CreateActionRequest,System.Threading.CancellationToken)">
            <summary>
            Create an action. 
            </summary>
            <remarks>
            Once an action is created, it must be deployed, and then bound to a trigger before it will be executed as part of a flow.
            </remarks>
            <param name="request">Specifies criteria to use when creating an action.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Actions.Action"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.Actions.UpdateActionRequest,System.Threading.CancellationToken)">
            <summary>
            Update an existing action.
            </summary>
            <remarks>
            If this action is currently bound to a trigger, updating it will not affect any user flows until the action is deployed.
            </remarks>
            <param name="id">The id of the action to update.</param>
            <param name="request">Specifies criteria to use when updating an action.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Actions.Action"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.DeleteAsync(System.String,Auth0.ManagementApi.Models.Actions.DeleteActionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an action and all of its associated versions.
            </summary>
            <remarks>
            An action must be unbound from all triggers before it can be deleted.
            </remarks>
            <param name="id">The ID of the action to delete.</param>
            <param name="request">Specifies criteria to use when deleting an action.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetAllTriggersAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the set of triggers currently available within actions. A trigger is an extensibility point to which actions can be bound
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list containing the triggers.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetExecutionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a specific execution of a trigger.
            </summary>
            <remarks>
            Relevant execution IDs will be included in tenant logs generated as part of that authentication flow.
            Executions will only be stored for 10 days after their creation.
            </remarks>
            <param name="id">The ID of the execution to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved execution.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetAllVersionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve all versions of an action.
            </summary>
            <remarks>
            An action version is created whenever an action is deployed. An action version is immutable, once created.
            </remarks>
            <param name="actionId">The ID of the action.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved versions of the specified action.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetVersionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a specific version of an action.
            </summary>
            <remarks>
            An action version is created whenever an action is deployed. An action version is immutable, once created.
            </remarks>
            <param name="actionId">The ID of the action.</param>
            <param name="versionId">The ID of the action version.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved version of the specified action.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.GetAllTriggerBindingsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve the actions that are bound to a trigger.
            </summary>
            <remarks>
            Once an action is created and deployed, it must be attached (i.e. bound) to a trigger so that it will be executed as part of a flow.
            The list of actions returned reflects the order in which they will be executed during the appropriate flow.
            </remarks>
            <param name="triggerId">An actions extensibility point.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The retrieved trigger bindings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.UpdateTriggerBindingsAsync(System.String,Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingsRequest,System.Threading.CancellationToken)">
            <summary>
            Update the actions that are bound (i.e. attached) to a trigger.
            Once an action is created and deployed, it must be attached(i.e.bound) to a trigger so that it will be executed as part of a flow.
            The order in which the actions are provided will determine the order in which they are executed.
            </summary>
            <param name="triggerId">An actions extensibility point.</param>
            <param name="request">Specifies criteria to use when updating the trigger bindings.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The trigger bindings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.DeployAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deploy an action.
            </summary>
            <remarks>
            Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger,
            then the system will begin executing the newly deployed version of the action immediately.Otherwise, the action will only be executed as a part of a flow once it is bound to that flow.
            </remarks>
            <param name="id">The ID of the action to deploy.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The action version that was created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IActionsClient.RollbackToVersionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs the equivalent of a roll-back of an action to an earlier, specified version.
            </summary>
            <remarks>
            Creates a new, deployed action version that is identical to the specified version.
            If this action is currently bound to a trigger, the system will begin executing the newly-created version immediately.
            </remarks>
            <param name="actionId">The ID of the action.</param>
            <param name="versionId">The ID of the version to deploy.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IAttackProtectionClient.GetSuspiciousIpThrottlingAsync(System.Threading.CancellationToken)">
            <summary>
            Get the suspicious IP throttling configuration.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling"/> containing the configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IAttackProtectionClient.UpdateSuspiciousIpThrottlingAsync(Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling,System.Threading.CancellationToken)">
            <summary>
            Update the suspicious IP throttling configuration.
            </summary>
            <param name="request">Specifies criteria to use when updating the configuration.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IAttackProtectionClient.GetBreachedPasswordDetectionAsync(System.Threading.CancellationToken)">
            <summary>
            Get breached password detection settings.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection"/> containing the configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IAttackProtectionClient.UpdateBreachedPasswordDetectionAsync(Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection,System.Threading.CancellationToken)">
            <summary>
            Update breached password detection settings.
            </summary>
            <param name="request">Specifies criteria to use when updating the configuration.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IAttackProtectionClient.GetBruteForceProtectionAsync(System.Threading.CancellationToken)">
            <summary>
            Get the brute force configuration.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection"/> containing the configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IAttackProtectionClient.UpdateBruteForceProtectionAsync(Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection,System.Threading.CancellationToken)">
            <summary>
            Update the brute force configuration.
            </summary>
            <param name="request">Specifies criteria to use when updating the configuration.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBlacklistedTokensClient.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the blacklisted claims.
            </summary>
            <param name="aud">The JWT's aud claim. The client_id of the client for which it was issued.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.BlacklistedToken"/> objects.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBlacklistedTokensClient.CreateAsync(Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Blacklists a JWT token.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest"/> containing the information of the token to blacklist.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous create operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBrandingClient.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves branding settings for a tenant.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Branding"/> containing the branding for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBrandingClient.UpdateAsync(Auth0.ManagementApi.Models.BrandingUpdateRequest,System.Threading.CancellationToken)">
            <summary>s
            Updates the branding for a tenant.
            </summary>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.BrandingUpdateRequest" /> containing the branding information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Branding"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBrandingClient.GetUniversalLoginTemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the template for the New Universal Login Experience.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UniversalLoginTemplate"/> for the new universal login experience.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBrandingClient.DeleteUniversalLoginTemplateAsync(System.Threading.CancellationToken)">
            <summary>
            Delete the template for the New Universal Login Experience
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IBrandingClient.SetUniversalLoginTemplateAsync(Auth0.ManagementApi.Models.UniversalLoginTemplateUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the template for the New Universal Login Experience.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UniversalLoginTemplateUpdateRequest"/> containing details of the template to set.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.UniversalLoginTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.CreateAsync(Auth0.ManagementApi.Models.ClientGrantCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new client grant.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientGrantCreateRequest"/> containing the properties of the Client Grant.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a client grant.
            </summary>
            <param name="id">The identifier of the Client Grant to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.GetAllAsync(Auth0.ManagementApi.Models.GetClientGrantsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the client grants.
            </summary>
            <param name="request">Specifies criteria to use when querying client grants.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the client grants requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientGrantUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a client grant.
            </summary>
            <param name="id">The identifier of the client grant to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientGrantUpdateRequest"/> containing the properties to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/> that has been updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.GetAllOrganizationsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the organizations associated to a client grant
            </summary>
            <param name="id">The identifier of the client grant.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.GetAllOrganizationsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get the organizations associated to a client grant
            </summary>
            <param name="id">The identifier of the client grant.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientGrantsClient.GetAllOrganizationsAsync(System.String,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get the organizations associated to a client grant
            </summary>
            <param name="id">The identifier of the client grant.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.CreateAsync(Auth0.ManagementApi.Models.ClientCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new client application.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientCreateRequest"/> containing the properties of the new client.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Client"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a client and all its related assets (like rules, connections, etc) given its id.
            </summary>
            <param name="id">The id of the client to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.GetAllAsync(Auth0.ManagementApi.Models.GetClientsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all client applications.
            </summary>
            <param name="request">Specifies criteria to use when querying clients.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the clients.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves a client by its id.
            </summary>
            <param name="id">The id of the client to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
            true if the fields specified are to be included in the result, false otherwise (defaults to
            true)
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Client"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.RotateClientSecret(System.String,System.Threading.CancellationToken)">
            <summary>
            Rotate a client secret. The generated secret is NOT base64 encoded.
            </summary>
            <param name="id">The id of the client which secret needs to be rotated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Client"/> that has had its secret rotated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ClientUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a client application.
            </summary>
            <param name="id">The id of the client you want to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientUpdateRequest"/> containing the properties of the client you want to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Client"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.CreateCredentialAsync(System.String,Auth0.ManagementApi.Models.ClientCredentialCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new client credential.
            </summary>
            <param name="clientId">The id of the client for which you want to create the credential.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientCredentialCreateRequest"/> containing the properties of the new client credential.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Credential"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.UpdateCredentialAsync(System.String,System.String,Auth0.ManagementApi.Models.ClientCredentialUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update a client credential.
            </summary>
            <param name="clientId">The id of the client for which you want to update the credential.</param>
            <param name="credentialId">The id of the credential to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ClientCredentialUpdateRequest"/> containing the properties of the new client credential.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Credential"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.GetAllCredentialsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all credentials for a client.
            </summary>
            <param name="clientId">The id of the client for which you want to retrieve the credentials.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:System.Collections.Generic.IList`1"/> containing the client's credentials.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.GetCredentialAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a specific credential for a client.
            </summary>
            <param name="clientId">The id of the client for which you want to retrieve the credential.</param>
            <param name="credentialId">The id of the credential to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Credential"/> containing the client's credential.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IClientsClient.DeleteCredentialAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific credential registered with the provided client.
            </summary>
            <param name="clientId">The id of the client for which you want to remove the credential.</param>
            <param name="credentialId">The id of the credential to remove.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.CreateAsync(Auth0.ManagementApi.Models.ConnectionCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new connection according to the request.
            </summary>
            <param name="request">The request containing the properties for the new connection.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Connection"/> containing the newly created Connection.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a connection and all its users.
            </summary>
            <param name="id">The id of the connection to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.DeleteUserAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified connection user by its <paramref name="email"/>.
            </summary>
            <remarks>
            Currently only database connections are supported and you cannot delete all users from specific connection.
            </remarks>
            <param name="id">The identifier of the connection.</param>
            <param name="email">The email of the user to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves a connection by its <paramref name="id"/>.
            </summary>
            <param name="id">The id of the connection to retrieve.</param>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be included in the result, false otherwise (defaults to true).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Connection"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.GetAllAsync(Auth0.ManagementApi.Models.GetConnectionsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves every connection matching the specified strategy. All connections are retrieved if no strategy is being specified. Accepts a list of fields to include or exclude in the resulting list of connection objects.
            </summary>
            <param name="request">Specifies criteria to use when querying connections.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of connections.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ConnectionUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a connection.
            </summary>
            <param name="id">The id of the connection to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.ConnectionUpdateRequest"/> containing the properties of the connection you wish to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Connection"/> that has been updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IConnectionsClient.CheckStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status of an ad/ldap connection.
            </summary>
            <param name="id">ID of the connection to check.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous check operation. Will throw if the status check fails.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ICustomDomainsClient.CreateAsync(Auth0.ManagementApi.Models.CustomDomainCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new custom domain and returns it.
            </summary>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.CustomDomainCreateRequest"/> representing the new domain.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.CustomDomain"/> containing the newly created custom domain.</returns>
            <remarks>The custom domain will need to be verified before it starts accepting requests.</remarks>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ICustomDomainsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a custom domain by its ID.
            </summary>
            <param name="id">The ID of the domain to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asyncronous delete operation.</returns>
            <remarks>When deleted, Auth0 will stop serving requests for this domain.</remarks>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ICustomDomainsClient.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the status of every custom domain.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing the details of every custom domain.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ICustomDomainsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a custom domain status by its ID
            </summary>
            <param name="id">The ID of the domain to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.CustomDomain"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ICustomDomainsClient.VerifyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Run the verification process for the custom domain. 
            </summary>
            <param name="id">The ID of the domain to verify.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.CustomDomainVerification"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.GetAllAsync(System.String,System.Boolean,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the device credentials.
            </summary>
            <param name="fields">A comma separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</param>
            <param name="includeFields">True if the fields specified are to be excluded from the result, false otherwise (defaults to true).</param>
            <param name="userId">The user id of the devices to retrieve.</param>
            <param name="clientId">The client id of the devices to retrieve.</param>
            <param name="type">The type of credentials.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/> which conforms to the criteria specified.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.GetAllAsync(Auth0.ManagementApi.Models.GetDeviceCredentialsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the device credentials.
            </summary>
            <param name="request">Specifies criteria to use when querying device credentials.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/> which conforms to the criteria specified.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.CreateAsync(Auth0.ManagementApi.Models.DeviceCredentialCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new device credential.
            </summary>
            <param name="request">The request containing the details of the device credential to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.DeviceCredential"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IDeviceCredentialsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a device credential.
            </summary>
            <param name="id">The id of the device credential to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.ConfigureAsync(Auth0.ManagementApi.Models.EmailProviderConfigureRequest,System.Threading.CancellationToken)">
            <summary>
            Configures the email provider.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.EmailProviderConfigureRequest" /> containing the configuration properties of the
            provider.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the email provider.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.GetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the email provider.
            </summary>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve: name, enabled, settings fields.
            </param>
            <param name="includeFields">
            True if the fields specified are to be excluded from the result, false otherwise (defaults
            to true).
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailProviderClient.UpdateAsync(Auth0.ManagementApi.Models.EmailProviderUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the email provider.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.EmailProviderUpdateRequest" /> containing the configuration properties of the
            email provider.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.EmailProvider" /> instance containing the email provider details.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailTemplatesClient.CreateAsync(Auth0.ManagementApi.Models.EmailTemplateCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new email template.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailTemplateCreateRequest"/> containing details of the template to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailTemplatesClient.GetAsync(Auth0.ManagementApi.Models.EmailTemplateName,System.Threading.CancellationToken)">
            <summary>
            Gets an email template.
            </summary>
            <param name="templateName">The name of email template you wish to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailTemplatesClient.PatchAsync(Auth0.ManagementApi.Models.EmailTemplateName,Auth0.ManagementApi.Models.EmailTemplatePatchRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an email template.
            </summary>
            <param name="templateName">The name of the email template to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailTemplatePatchRequest"/> containing details of the template to patch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IEmailTemplatesClient.UpdateAsync(Auth0.ManagementApi.Models.EmailTemplateName,Auth0.ManagementApi.Models.EmailTemplateUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an email template.
            </summary>
            <param name="templateName">The name of the email template to patch.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailTemplateUpdateRequest"/> containing details of the template to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.EmailTemplate"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGrantsClient.GetAllAsync(Auth0.ManagementApi.Models.Grants.GetGrantsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve all Grants.
            </summary>
            <remarks>
            A token with scope read:grants is needed
            </remarks>
            <param name="request">Specifies criteria to use when querying grants.</param>
            <param name="pagination">Specifies pagination info to use.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the grants.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGrantsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an existing Grant
            </summary>
            <remarks>
            A token with scope delete:grants is needed.
            </remarks>
            <param name="id">The ID of the grant to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGrantsClient.DeleteAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes all Grants of a given user. 
            </summary>
            <remarks>
            A token with scope delete:grants is needed.
            </remarks>
            <param name="id">The ID of the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.CreateEnrollmentTicketAsync(Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest,System.Threading.CancellationToken)">
            <summary>
            Generate an email with a link to start the Guardian enrollment process.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest" /> containing the information about the user who should be enrolled.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse" /> with the details of the ticket that was created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.DeleteEnrollmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an enrollment.
            </summary>
            <param name="id">The ID of the enrollment to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.GetEnrollmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an enrollment.
            </summary>
            <param name="id">The ID of the enrollment to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianEnrollment"/> containing details of the enrollment.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.GetFactorsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves all factors. Useful to check factor enablement and trial status.
            </summary>
            <returns>List of <see cref="T:Auth0.ManagementApi.Models.GuardianFactor" /> instances with the available factors.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.GetSmsTemplatesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves enrollment and verification templates. You can use it to check the current values for your templates.
            </summary>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the templates.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.GetSnsConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Returns provider configuration for AWS SNS.
            </summary>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSnsConfiguration" /> containing Amazon SNS configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.GetTwilioConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Returns configuration for the Guardian Twilio provider.
            </summary>
            <returns><see cref="T:Auth0.ManagementApi.Models.GuardianTwilioConfiguration" /> with the Twilio configuration.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.UpdateFactorAsync(Auth0.ManagementApi.Models.UpdateGuardianFactorRequest,System.Threading.CancellationToken)">
            <summary>
            Enable or Disable a Guardian factor.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianFactorRequest" /> containing the details of the factor to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianFactorResponse" /> indicating the status of the factor.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.UpdateSmsTemplatesAsync(Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates,System.Threading.CancellationToken)">
            <summary>
            Updates enrollment and verification templates. Useful to send custom messages on SMS enrollment and verification.
            </summary>
            <param name="templates">A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the updated templates.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates" /> containing the templates.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.UpdateTwilioConfigurationAsync(Auth0.ManagementApi.Models.UpdateGuardianTwilioConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Configure the Guardian Twilio provider.
            </summary>
            <param name="request">
            The <see cref="T:Auth0.ManagementApi.Models.UpdateGuardianTwilioConfigurationRequest" /> containing the configuration settings.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.GuardianTwilioConfiguration" /> containing the updated configuration settings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.GetPhoneMessageTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the enabled phone factors for multi-factor authentication
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes" /> containing the message types.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IGuardianClient.UpdatePhoneMessageTypesAsync(Auth0.ManagementApi.Models.GuardianPhoneMessageTypes,System.Threading.CancellationToken)">
            <summary>
            Update enabled phone factors for multi-factor authentication
            </summary>
            <param name="messageTypes">A <see cref="T:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes" /> containing the list of phone factors to enable on the tenan.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes" /> containing the message types.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IHooksClient.CreateAsync(Auth0.ManagementApi.Models.HookCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new hook according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.HookCreateRequest" /> containing the details of the hook to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Hook" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IHooksClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a hook.
            </summary>
            <param name="id">The ID of the hook to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IHooksClient.GetAllAsync(Auth0.ManagementApi.Models.GetHooksRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all hooks.
            </summary>
            <param name="request">Specifies criteria to use when querying hooks.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the hooks requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IHooksClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a hook by its ID.
            </summary>
            <param name="id">The ID of the hook to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include, empty to retrieve all fields.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Hook" /> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IHooksClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.HookUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a hook.
            </summary>
            <param name="id">The ID of the hook to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.HookUpdateRequest" /> containing the information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Hook"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a job.
            </summary>
            <remarks>
            This is useful to check the status of a job.
            </remarks>
            <param name="id">The ID of the job to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.ImportUsersAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Imports users to a connection from a file using a long running job. 
            </summary>
            <remarks>
            The documentation for the file format is <a href="https://auth0.com/docs/bulk-import">here</a>.
            </remarks>
            <param name="connectionId">The connection identifier.</param>
            <param name="fileName">Name of the file.</param>
            <param name="file">The file.</param>
            <param name="upsert">Whether to update the user if already exists.</param>
            <param name="externalId">Customer-defined id.</param>
            <param name="sendCompletionEmail">Whether to send the user an email on import completion (true) or not (false).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.ExportUsersAsync(Auth0.ManagementApi.Models.UsersExportsJobRequest,System.Threading.CancellationToken)">
            <summary>
            Exports users from a connection to a file using a long running job. 
            </summary>
            <remarks>
            The documentation for user exports can be found <a href="https://auth0.com/docs/users/bulk-user-exports">here</a>.
            </remarks>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UsersExportsJobRequest"/> containing the information for the job to export users.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IJobsClient.SendVerificationEmailAsync(Auth0.ManagementApi.Models.VerifyEmailJobRequest,System.Threading.CancellationToken)">
            <summary>
            Send an email to the specified user that asks them to click a link to verify their email address.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.VerifyEmailJobRequest"/> containing the information of the user whose email you want verified.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IKeysClient.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Get all Application Signing Keys
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>All available signing keys <see cref="T:Auth0.ManagementApi.Models.Keys.Key" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IKeysClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get an Application Signing Key by its key ID.
            </summary>
            <param name="kid">The ID of the key to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Keys.Key"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IKeysClient.RotateSigningKeyAsync(System.Threading.CancellationToken)">
            <summary>
            Rotate the Application Signing Key.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The next rotated key's cert and kid.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IKeysClient.RevokeSigningKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Revoke an Application Signing Key by its key ID.
            </summary>
            <param name="kid">The ID of the key to revoke.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The revoked key's cert and kid.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogsClient.GetAllAsync(Auth0.ManagementApi.Models.GetLogsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves log entries that match the specified search criteria.
            </summary>
            <param name="request">Specifies criteria to use when querying logs.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of log entries.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the data related to the log entry identified by id. This returns a single log entry representation as specified in the schema.
            </summary>
            <param name="id">The identifier of the log entry to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.LogEntry"/> instance containing the information about the log entry.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogStreamsClient.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all of the log streams
            </summary>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.LogStream"/> objects</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogStreamsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a log stream
            </summary>
            <param name="id">The id of the log stream to get</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.LogStream"/> object</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogStreamsClient.CreateAsync(Auth0.ManagementApi.Models.LogStreamCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new log stream
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.LogStreamCreateRequest"/> containing the information needed to create the log stream</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the  asynchronous create operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogStreamsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a log stream
            </summary>
            <param name="id">The id of the log stream to delete</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ILogStreamsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.LogStreamUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a log stream
            </summary>
            <param name="id">The id of the log stream to update</param>
            <param name="request">The information required to update the log stream</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The updated <see cref="T:Auth0.ManagementApi.Models.LogStream"/> object</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllAsync(Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organizations.
            </summary>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllAsync(Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organizations using checkpoint <paramref name="pagination"/>.
            </summary>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1"/> containing the organizations.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization by its id.
            </summary>
            <param name="id">The id of the organization to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Organization"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization by its name.
            </summary>
            <param name="name">The name of the organization to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Organization"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.CreateAsync(Auth0.ManagementApi.Models.OrganizationCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationCreateRequest"/> containing the properties of the new organization.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Organization"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.OrganizationUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an organization.
            </summary>
            <param name="id">The id of the organization you want to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationUpdateRequest"/> containing the properties of the organization you want to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Organization"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an organization.
            </summary>
            <param name="id">The id of the organization to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllConnectionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization connections.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the connections.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization connections.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetConnectionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization connection by its id.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the connection.</param>
            <param name="connectionId">The id of the connection to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnection"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.CreateConnectionAsync(System.String,Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization connection.
            </summary>
            <param name="organizationId">The id of the organization for which you want to add the connection.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest"/> containing the properties of the new organization connection.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.OrganizationConnection"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.UpdateConnectionAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationConnectionUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an organization connection.
            </summary>
            <param name="organizationId">The id of the organization for which you want to update the connection.</param>
            <param name="connectionId">The id of the connection you want to update for the organization.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnectionUpdateRequest"/> containing the properties of the organization connection you want to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnection"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.DeleteConnectionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an organization connection.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the connection.</param>
            <param name="connectionId">The id of the connection to delete from the organization.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.AddMembersAsync(System.String,Auth0.ManagementApi.Models.OrganizationAddMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Add members to an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to add members.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationAddMembersRequest"/> containing the members.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="request">Specifies criteria to use when querying organization members.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members using checkpoint <paramref name="pagination"/>.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members using checkpoint <paramref name="pagination"/>.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="request">Specifies criteria to use when querying organization members.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.DeleteMemberAsync(System.String,Auth0.ManagementApi.Models.OrganizationDeleteMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes members from an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the members.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationDeleteMembersRequest"/> containing the members.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.AddMemberRolesAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationAddMemberRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Add members to an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to add roles to the given user.</param>
            <param name="userId">The id of the user for which you want to add roles.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationAddMemberRolesRequest"/> containing the roles.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllMemberRolesAsync(System.String,System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all roles for an organization members.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the roles for a given user.</param>
            <param name="userId">The id of the user for which you want to retrieve the roles.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.DeleteMemberRolesAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationDeleteMemberRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes roles from an organization member.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete roles for a given user.</param>
            <param name="userId">The id of the user for which you want to remove roles.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationDeleteMemberRolesRequest"/> containing the roles.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.CreateInvitationAsync(System.String,Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization invitation.
            </summary>
            <param name="organizationId">The id of the organization to which you want to invite a user.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest"/> containing the properties of the new organization invitation.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.OrganizationInvitation"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllInvitationsAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetAllInvitationsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization invitations.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the invitations.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationGetAllInvitationsRequest"/> containing the properties to retrieve the organization invitations.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetInvitationAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationGetInvitationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization invitation by its id.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the invitation.</param>
            <param name="invitationId">The id of the organization invitation to retrieve.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationGetInvitationRequest"/> containing the properties to retrieve the organization invitation.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.OrganizationInvitation"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.DeleteInvitationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an organization invitation.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the invitation.</param>
            <param name="invitationId">The id of the invitation you want to remove.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.GetAllClientGrantsAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetClientGrantsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get client grants associated with an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the client grants.</param>
            <param name="request">Specifies criteria to use when querying client grants for the organization.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the client grants requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.CreateClientGrantAsync(System.String,Auth0.ManagementApi.Models.OrganizationCreateClientGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Associate a client grant with an organization
            </summary>
            <param name="organizationId">The id of the organization to which you want to associate the client grant.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationCreateClientGrantRequest"/> containing the properties of the Client Grant to associate with the organization.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IOrganizationsClient.DeleteClientGrantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a client grant from an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the client grant.</param>
            <param name="clientGrantId">The id of the client grant you want to delete from the organization</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IPromptsClient.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get prompts settings
            </summary>
            <remarks>
            Get prompts settings
            </remarks>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Prompts.Prompt"/> instance containing the information about the prompt settings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IPromptsClient.UpdateAsync(Auth0.ManagementApi.Models.Prompts.PromptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update prompts settings.
            </summary>
            <remarks>
            Update prompts settings.
            </remarks>
            <param name="request">Specifies prompt setting values that are to be updated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Prompts.Prompt"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.CreateAsync(Auth0.ManagementApi.Models.ResourceServerCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource server.
            </summary>
            <param name="request">Contains the information for the resource server to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource server.
            </summary>
            <param name="id">The id of the resource server to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a resource server by its id.
            </summary>
            <param name="id">The identifier of the resource server.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.GetAllAsync(Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the resource servers.
            </summary>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of resource servers.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IResourceServersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ResourceServerUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a resource server,
            </summary>
            <param name="id">The id of the resource server to update.</param>
            <param name="request">Contains the information for the resource server to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.CreateAsync(Auth0.ManagementApi.Models.RoleCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new role according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RoleCreateRequest"/> containing the details of the role to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Role" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a role.
            </summary>
            <param name="id">The ID of the role to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetAllAsync(Auth0.ManagementApi.Models.GetRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all roles.
            </summary>
            <param name="request">Specifies criteria to use when querying roles.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the roles</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetAllAsync(Auth0.ManagementApi.Models.GetRolesRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all roles.
            </summary>
            <param name="request">Specifies criteria to use when querying roles.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the roles requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a role by its ID.
            </summary>
            <param name="id">The ID of the role to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Role"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.RoleUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a role.
            </summary>
            <param name="id">The ID of the role to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.RoleUpdateRequest" /> containing the information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Role"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetUsersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of users associated with a role.
            </summary>
            <param name="id">The ID of the role to query.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetUsersAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of users associated with a role.
            </summary>
            <param name="id">The ID of the role to query.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetUsersAsync(System.String,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of users associated with a role.
            </summary>
            <param name="id">The ID of the role to query.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.AssignUsersAsync(System.String,Auth0.ManagementApi.Models.AssignUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns Users to a role.
            </summary>
            <param name="id">The ID of the role to assign users to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignUsersRequest" /> containing the user IDs to assign to the role.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assign operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.GetPermissionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the permissions assigned to a role.
            </summary>
            <param name="id">The id of the role to obtain the permissions for.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned permissions for this role.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.AssignPermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Assign permissions to a role.
            </summary>
            <param name="id">The ID of the role to assign permissions to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to assign to the role.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assignment operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRolesClient.RemovePermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Remove permissions assigned to a role.
            </summary>
            <param name="id">The ID of the role to remove permissions from.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to remove from the role.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous remove operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.CreateAsync(Auth0.ManagementApi.Models.RuleCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new rule according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RuleCreateRequest" /> containing the details of the rule to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a rule.
            </summary>
            <param name="id">The ID of the rule to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.GetAllAsync(Auth0.ManagementApi.Models.GetRulesRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all rules.
            </summary>
            <param name="request">Specifies criteria to use when querying rules.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the rules requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves a rule by its ID.
            </summary>
            <param name="id">The ID of the rule to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
            True if the fields specified are to be included in the result, false otherwise (defaults to
            true).
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Rule" /> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.RuleUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a rule.
            </summary>
            <param name="id">The ID of the rule to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.RuleUpdateRequest" /> containing the information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Rule"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesConfigClient.CreateOrUpdateAsync(Auth0.ManagementApi.Models.RulesConfigCreateOrUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a rules config variable according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RulesConfigCreateOrUpdateRequest" /> containing the details of the rule to create or update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IRulesConfigClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a rules config variable.
            </summary>
            <param name="key">The key of the rules-config to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IStatsClient.GetActiveUsersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the active users count (logged in during the last 30 days).
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The number of users that have logged in during the last 30 days.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IStatsClient.GetDailyStatsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Gets the daily stats for a particular period.
            </summary>
            <param name="from">The first day of the period (inclusive).</param>
            <param name="to">The last day of the period (inclusive).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DailyStatistics"/> containing the statistics for each day in the period.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITenantSettingsClient.GetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the settings for the tenant.
            </summary>
            <param name="fields">
            A comma-separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
            <see langword="true"/> if the fields specified are to be included in the result, <see langword="false"/> otherwise (defaults to
            <see langword="true"/>).
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the settings for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITenantSettingsClient.UpdateAsync(Auth0.ManagementApi.Models.TenantSettingsUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the settings for the tenant.
            </summary>
            <param name="request">
            <see cref="T:Auth0.ManagementApi.Models.TenantSettingsUpdateRequest" /> containing the settings for the tenant which are to be updated.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the updated settings for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITicketsClient.CreateEmailVerificationTicketAsync(Auth0.ManagementApi.Models.EmailVerificationTicketRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an email verification ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailVerificationTicketRequest"/> containing the details of the ticket to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Ticket"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ITicketsClient.CreatePasswordChangeTicketAsync(Auth0.ManagementApi.Models.PasswordChangeTicketRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a password change ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.PasswordChangeTicketRequest"/> containing the details of the ticket to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Ticket"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.GetByIdentifierAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a user's blocks by identifier.
            </summary>
            <param name="identifier">The identifier of the user. Can be a user's email address, username or phone number.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UserBlocks"/> relating to the user requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.GetByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a user's blocks by user id.
            </summary>
            <param name="id">The id of the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UserBlocks"/> relating to the user requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.UnblockByIdentifierAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unblock a user by their identifier.
            </summary>
            <param name="identifier">The identifier of the user to unblock. Can be a user's email address, username or phone number.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous unblock operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUserBlocksClient.UnblockByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unblock a user by their id.
            </summary>
            <param name="id">The id of the user to unblock.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous unblock operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.AssignRolesAsync(System.String,Auth0.ManagementApi.Models.AssignRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns Roles to a user.
            </summary>
            <param name="id">The ID of the user to assign roles to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignRolesRequest" /> containing the role IDs to assign to the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assign operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.CreateAsync(Auth0.ManagementApi.Models.UserCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new user.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserCreateRequest" /> containing the properties of the user to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.User"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteAsync(System.String)">
            <summary>
            Deletes a user.
            </summary>
            <param name="id">The id of the user to delete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteMultifactorProviderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a user's multifactor provider.
            </summary>
            <param name="id">The id of the user who multi factor provider to delete.</param>
            <param name="provider">The type of the multifactor provider. Supported values 'duo' or 'google-authenticator'.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAllAsync(Auth0.ManagementApi.Models.GetUsersRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Lists or search for users based on criteria.
            </summary>
            <param name="request">Specifies criteria to use when querying users.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets a user.
            </summary>
            <param name="id">The id of the user to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields
            </param>
            <param name="includeFields">
            true if the fields specified are to be included in the result, false otherwise (defaults to
            true)
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.User"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetLogsAsync(Auth0.ManagementApi.Models.GetUserLogsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve every log event for a specific user.
            </summary>
            <param name="request">Specifies criteria to use when querying logs for a user.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the log entries for the user.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetRolesAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve assigned roles for a specific user.
            </summary>
            <param name="userId">The user id of the roles to retrieve.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the roles for the user.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetUsersByEmailAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets all users by email address.
            </summary>
            <param name="email">The email address to search for.</param>
            <param name="fields"> A comma separated list of fields to include or exclude (depending on <paramref name="includeFields"/>) from the result, null to retrieve all fields.</param>
            <param name="includeFields">true if the fields specified are to be included in the result, false otherwise. Defaults to true.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing all users for this email address.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetEnrollmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of Guardian enrollments.
            </summary>
            <param name="id">The user_id of the user to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task representing the operation and potential return value.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.InvalidateRememberBrowserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Invalidate all remembered browsers for MFA.
            </summary>
            <param name="id">The user_id of the user which will have its remembered browsers for MFA invalidated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task representing the operation and potential return value.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GenerateRecoveryCodeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generate new Guardian recovery code.
            </summary>
            <param name="id">The user_id of the user which guardian code will be regenerated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task representing the operation and potential return value.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.LinkAccountAsync(System.String,Auth0.ManagementApi.Models.UserAccountLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserAccountLinkRequest" /> containing details of the secondary account to link.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing details about this account link.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.LinkAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="primaryJwtToken">The JWT of the primary account.</param>
            <param name="secondaryJwtToken">The JWT for the secondary account you wish to link.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing details about this account link.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.RemoveRolesAsync(System.String,Auth0.ManagementApi.Models.AssignRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Removes Roles from a user.
            </summary>
            <param name="id">The ID of the user to remove roles from.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignRolesRequest" /> containing the role IDs to remove to the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous remove operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.UnlinkAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unlinks user accounts
            </summary>
            <param name="primaryUserId">The ID of the primary account.</param>
            <param name="provider">The type of the identity provider.</param>
            <param name="secondaryUserId">The ID for the secondary account.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing details about this account link.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.UserUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a user.
            </summary>
            <param name="id">The id of the user to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserUpdateRequest" /> containing the information you wish to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.User"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetPermissionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get the permissions assigned to the user.
            </summary>
            <param name="id">The id of the user to obtain the permissions for.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned permissions for this user.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.AssignPermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Assign permissions to a user.
            </summary>
            <param name="id">The ID of the user to assign permissions to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to assign to the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assignment operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.RemovePermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Removes permissions assigned to a user.
            </summary>
            <param name="id">The ID of the user to remove permissions from.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to remove from the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous remove operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAllOrganizationsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Lists organizations for a user.
            </summary>
            <param name="userId">The ID of the user for which you want to retrieve the organizations.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of organizations.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAuthenticationMethodsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of authentication methods.
            </summary>
            <param name="userId">The ID of the user for which you want to retrieve the authentication methods.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of authentication methods.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.GetAuthenticationMethodAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an authentication method for a given user.
            </summary>
            <param name="userId">The ID of the user for which you want to retrieve the authentication method.</param>
            <param name="authenticationMethodId">The ID of the authentication method you want to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.CreateAuthenticationMethodAsync(System.String,Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an authentication method for a given user.
            </summary>
            <remarks>
            Authentication methods created via this endpoint will be auto confirmed and should already have verification completed.
            </remarks>
            <param name="userId">The ID of the user for which you want to create the authentication method.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest" /> containing the properties of the authentication method to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.UpdateAuthenticationMethodsAsync(System.String,System.Collections.Generic.IList{Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest},System.Threading.CancellationToken)">
            <summary>
            Updates all authentication methods by replacing them with the given ones.
            </summary>
            <param name="userId">The ID of the user for which you want to update the authentication methods.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest" /> containing the properties of the authentication methods to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The updated list of <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.UpdateAuthenticationMethodAsync(System.String,System.String,Auth0.ManagementApi.Models.Users.AuthenticationMethodUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update an authentication methods.
            </summary>
            <param name="userId">The ID of the user for which you want to update the authentication methods</param>
            <param name="authenticationMethodId">The ID of the authentication method you want to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethodUpdateRequest" /> containing the properties of the authentication methods to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The updated <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteAuthenticationMethodsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes all authentication methods for the given user.
            </summary>
            <param name="userId">The ID of the user for which you want to update the authentication methods.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.IUsersClient.DeleteAuthenticationMethodAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an authentication method by id,.
            </summary>
            <param name="userId">The ID of the user for which you want to delete the authentication methods.</param>
            <param name="authenticationMethodId">The ID of the authentication method you want to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.JobsClient">
            <summary>
            Contains methods to access the /jobs endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance on <see cref="T:Auth0.ManagementApi.Clients.JobsClient"/>
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a job.
            </summary>
            <remarks>
            This is useful to check the status of a job.
            </remarks>
            <param name="id">The ID of the job to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.ImportUsersAsync(System.String,System.String,System.IO.Stream,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Imports users to a connection from a file using a long running job.
            </summary>
            <remarks>
            The documentation for the file format is <a href="https://auth0.com/docs/bulk-import">here</a>.
            </remarks>
            <param name="connectionId">The connection identifier.</param>
            <param name="fileName">Name of the file.</param>
            <param name="file">The file.</param>
            <param name="upsert">Whether to update the user if already exists.</param>
            <param name="externalId">Customer-defined id.</param>
            <param name="sendCompletionEmail">Whether to send the user an email on import completion (true) or not (false).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.ExportUsersAsync(Auth0.ManagementApi.Models.UsersExportsJobRequest,System.Threading.CancellationToken)">
            <summary>
            Exports users from a connection to a file using a long running job.
            </summary>
            <remarks>
            The documentation for user exports can be found <a href="https://auth0.com/docs/users/bulk-user-exports">here</a>.
            </remarks>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UsersExportsJobRequest"/> containing the information for the job to export users.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.JobsClient.SendVerificationEmailAsync(Auth0.ManagementApi.Models.VerifyEmailJobRequest,System.Threading.CancellationToken)">
            <summary>
            Send an email to the specified user that asks them to click a link to verify their email address.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.VerifyEmailJobRequest"/> containing the information of the user whose email you want verified.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Job"/> instance containing the information about the job.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.KeysClient">
            <summary>
            Contains methods to access the /keys endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.KeysClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Clients.KeysClient"/> class.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.KeysClient.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Get all Application Signing Keys
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>All available signing keys <see cref="T:Auth0.ManagementApi.Models.Keys.Key" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.KeysClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get an Application Signing Key by its key ID.
            </summary>
            <param name="kid">The ID of the key to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Keys.Key"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.KeysClient.RotateSigningKeyAsync(System.Threading.CancellationToken)">
            <summary>
            Rotate the Application Signing Key.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The next rotated key's cert and kid.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.KeysClient.RevokeSigningKeyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Revoke an Application Signing Key by its key ID.
            </summary>
            <param name="kid">The ID of the key to revoke.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The revoked key's cert and kid.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.LogsClient">
            <summary>
            Contains methods to access the /logs endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.LogsClient"/>
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogsClient.GetAllAsync(Auth0.ManagementApi.Models.GetLogsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves log entries that match the specified search criteria.
            </summary>
            <param name="request">Specifies criteria to use when querying logs.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of log entries.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the data related to the log entry identified by id. This returns a single log entry representation as specified in the schema.
            </summary>
            <param name="id">The identifier of the log entry to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.LogEntry"/> instance containing the information about the log entry.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.LogStreamsClient">
            <summary>
            Contains methods to access the /log-streams endpoint
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogStreamsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.LogStreamsClient"/>
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogStreamsClient.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all of the log streams
            </summary>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.LogStream"/> objects</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogStreamsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a log stream
            </summary>
            <param name="id">The id of the log stream to get</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.LogStream"/> object</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogStreamsClient.CreateAsync(Auth0.ManagementApi.Models.LogStreamCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new log stream
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.LogStreamCreateRequest"/> containing the information needed to create the log stream</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the  asynchronous create operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogStreamsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a log stream
            </summary>
            <param name="id">The id of the log stream to delete</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.LogStreamsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.LogStreamUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a log stream
            </summary>
            <param name="id">The id of the log stream to update</param>
            <param name="request">The information required to update the log stream</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The updated <see cref="T:Auth0.ManagementApi.Models.LogStream"/> object</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.ClientsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllAsync(Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organizations.
            </summary>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organizations.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllAsync(Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organizations using checkpoint <paramref name="pagination"/>.
            </summary>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1"/> containing the organizations.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization by its id.
            </summary>
            <param name="id">The id of the organization to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Organization"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization by its name.
            </summary>
            <param name="name">The name of the organization to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Organization"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.CreateAsync(Auth0.ManagementApi.Models.OrganizationCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationCreateRequest"/> containing the properties of the new organization.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.Organization"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.OrganizationUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an organization.
            </summary>
            <param name="id">The id of the organization you want to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationUpdateRequest"/> containing the properties of the organization you want to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Organization"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an organization.
            </summary>
            <param name="id">The id of the organization to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllConnectionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization connections.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the connections.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization connections.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetConnectionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization connection by its id.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the connection.</param>
            <param name="connectionId">The id of the connection to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnection"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.CreateConnectionAsync(System.String,Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization connection.
            </summary>
            <param name="organizationId">The id of the organization for which you want to add the connection.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest"/> containing the properties of the new organization connection.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.OrganizationConnection"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.UpdateConnectionAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationConnectionUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an organization connection.
            </summary>
            <param name="organizationId">The id of the organization for which you want to update the connection.</param>
            <param name="connectionId">The id of the connection you want to update for the organization.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnectionUpdateRequest"/> containing the properties of the organization connection you want to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.OrganizationConnection"/> that was updated.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.DeleteConnectionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an organization connection.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the connection.</param>
            <param name="connectionId">The id of the connection to delete from the organization.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.AddMembersAsync(System.String,Auth0.ManagementApi.Models.OrganizationAddMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Add members to an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to add members.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationAddMembersRequest"/> containing the members.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="request">Specifies criteria to use when querying organization members.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members using checkpoint <paramref name="pagination"/>.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllMembersAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization members using checkpoint <paramref name="pagination"/>.
            </summary>
            <param name="organizationId">The ID of the organization for which you want to retrieve the members.</param>
            <param name="request">Specifies criteria to use when querying organization members.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.DeleteMemberAsync(System.String,Auth0.ManagementApi.Models.OrganizationDeleteMembersRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes members from an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the members.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationDeleteMembersRequest"/> containing the members.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.AddMemberRolesAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationAddMemberRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Add members to an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to add roles to the given user.</param>
            <param name="userId">The id of the user for which you want to add roles.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationAddMemberRolesRequest"/> containing the roles.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllMemberRolesAsync(System.String,System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all roles for an organization members.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the roles for a given user.</param>
            <param name="userId">The id of the user for which you want to retrieve the roles.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.DeleteMemberRolesAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationDeleteMemberRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes roles from an organization member.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete roles for a given user.</param>
            <param name="userId">The id of the user for which you want to remove roles.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationDeleteMemberRolesRequest"/> containing the roles.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.CreateInvitationAsync(System.String,Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization invitation.
            </summary>
            <param name="organizationId">The id of the organization to which you want to invite a user.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest"/> containing the properties of the new organization invitation.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.OrganizationInvitation"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllInvitationsAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetAllInvitationsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all organization invitations.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the invitations.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationGetAllInvitationsRequest"/> containing the properties to retrieve the organization invitations.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the organization members.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetInvitationAsync(System.String,System.String,Auth0.ManagementApi.Models.OrganizationGetInvitationRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves an organization invitation by its id.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the invitation.</param>
            <param name="invitationId">The id of the organization invitation to retrieve.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationGetInvitationRequest"/> containing the properties to retrieve the organization invitation.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.OrganizationInvitation"/> retrieved.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.DeleteInvitationAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an organization invitation.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the invitation.</param>
            <param name="invitationId">The id of the invitation you want to remove.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.GetAllClientGrantsAsync(System.String,Auth0.ManagementApi.Models.OrganizationGetClientGrantsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get client grants associated to an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to retrieve the client grants.</param>
            <param name="request">Specifies criteria to use when querying client grants for the organization.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the client grants requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.CreateClientGrantAsync(System.String,Auth0.ManagementApi.Models.OrganizationCreateClientGrantRequest,System.Threading.CancellationToken)">
            <summary>
            Associate a client grant with an organization
            </summary>
            <param name="organizationId">The id of the organization to which you want to associate the client grants.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.OrganizationCreateClientGrantRequest"/> containing the properties of the Client Grant to associate with the organization.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The new <see cref="T:Auth0.ManagementApi.Models.ClientGrant"/> that has been created.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.OrganizationsClient.DeleteClientGrantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a client grant from an organization.
            </summary>
            <param name="organizationId">The id of the organization for which you want to delete the client grant.</param>
            <param name="clientGrantId">The id of the client grant you want to delete from the organization</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.PromptsClient">
            <summary>
            Contains methods to access the /prompts endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.PromptsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance on <see cref="T:Auth0.ManagementApi.Clients.PromptsClient"/>
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.PromptsClient.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get prompts settings
            </summary>
            <remarks>
            Get prompts settings
            </remarks>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.Prompts.Prompt"/> instance containing the information about the prompt settings.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.PromptsClient.UpdateAsync(Auth0.ManagementApi.Models.Prompts.PromptUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update prompts settings.
            </summary>
            <remarks>
            Update prompts settings.
            </remarks>
            <param name="request">Specifies prompt setting values that are to be updated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Prompts.Prompt"/> that was updated.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.ResourceServersClient">
            <summary>
            Contains methods to access the /resource-server endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new instance of <see cref="T:Auth0.ManagementApi.Clients.ResourceServersClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.CreateAsync(Auth0.ManagementApi.Models.ResourceServerCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource server.
            </summary>
            <param name="request">Contains the information for the resource server to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource server.
            </summary>
            <param name="id">The id of the resource server to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a resource server by its id.
            </summary>
            <param name="id">The identifier of the resource server.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.GetAllAsync(Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the resource servers.
            </summary>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of resource servers.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.ResourceServersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.ResourceServerUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a resource server,
            </summary>
            <param name="id">The id of the resource server to update.</param>
            <param name="request">Contains the information for the resource server to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.ResourceServer"/>.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.RolesClient">
            <summary>
            Contains methods to access the /roles endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Clients.RolesClient"/> class.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.CreateAsync(Auth0.ManagementApi.Models.RoleCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new role according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RoleCreateRequest"/> containing the details of the role to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Role" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a role.
            </summary>
            <param name="id">The ID of the role to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetAllAsync(Auth0.ManagementApi.Models.GetRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all roles.
            </summary>
            <param name="request">Specifies criteria to use when querying roles.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the roles</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetAllAsync(Auth0.ManagementApi.Models.GetRolesRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all roles.
            </summary>
            <param name="request">Specifies criteria to use when querying roles.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the roles requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a role by its ID.
            </summary>
            <param name="id">The ID of the role to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Role"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.RoleUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a role.
            </summary>
            <param name="id">The ID of the role to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.RoleUpdateRequest" /> containing the information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Role"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetUsersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of users associated with a role.
            </summary>
            <param name="id">The ID of the role to query.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetUsersAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of users associated with a role.
            </summary>
            <param name="id">The ID of the role to query.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetUsersAsync(System.String,Auth0.ManagementApi.Paging.CheckpointPaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of users associated with a role.
            </summary>
            <param name="id">The ID of the role to query.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> to use in requesting checkpoint-paginated results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.AssignUsersAsync(System.String,Auth0.ManagementApi.Models.AssignUsersRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns Users to a role.
            </summary>
            <param name="id">The ID of the role to assign users to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignUsersRequest" /> containing the user IDs to assign to the role.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assign operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.GetPermissionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets the permissions assigned to a role.
            </summary>
            <param name="id">The id of the role to obtain the permissions for.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned permissions for this role.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.AssignPermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Assign permissions to a role.
            </summary>
            <param name="id">The ID of the role to assign permissions to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to assign to the role.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assignment operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RolesClient.RemovePermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Remove permissions assigned to a role.
            </summary>
            <param name="id">The ID of the role to remove permissions from.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to remove from the role.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous remove operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.RulesClient">
            <summary>
            Contains methods to access the /rules endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.RulesClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.CreateAsync(Auth0.ManagementApi.Models.RuleCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new rule according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RuleCreateRequest" /> containing the details of the rule to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a rule.
            </summary>
            <param name="id">The ID of the rule to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.GetAllAsync(Auth0.ManagementApi.Models.GetRulesRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of all rules.
            </summary>
            <param name="request">Specifies criteria to use when querying rules.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the rules requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Retrieves a rule by its ID.
            </summary>
            <param name="id">The ID of the rule to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on
            <paramref name="includeFields" />) from the result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
            True if the fields specified are to be included in the result, false otherwise (defaults to
            true).
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Rule" /> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.RuleUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a rule.
            </summary>
            <param name="id">The ID of the rule to update.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.RuleUpdateRequest" /> containing the information to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.Rule"/>.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.RulesConfigClient">
            <summary>
            Contains methods to access the /rules-configs endpoint
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesConfigClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.RulesConfigClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesConfigClient.CreateOrUpdateAsync(Auth0.ManagementApi.Models.RulesConfigCreateOrUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a rules config variable according to the request.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.RulesConfigCreateOrUpdateRequest" /> containing the details of the rule to create or update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Rule" />.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.RulesConfigClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a rules config variable.
            </summary>
            <param name="key">The key of the rules-config to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.StatsClient">
            <summary>
            Contains methods to access the /stats endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.StatsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.StatsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.StatsClient.GetActiveUsersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the active users count (logged in during the last 30 days).
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The number of users that have logged in during the last 30 days.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.StatsClient.GetDailyStatsAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Gets the daily stats for a particular period.
            </summary>
            <param name="from">The first day of the period (inclusive).</param>
            <param name="to">The last day of the period (inclusive).</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A list of <see cref="T:Auth0.ManagementApi.Models.DailyStatistics"/> containing the statistics for each day in the period.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.TenantSettingsClient">
            <summary>
            Contains methods to access the /tenants/settings endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TenantSettingsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.TenantSettingsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TenantSettingsClient.GetAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the settings for the tenant.
            </summary>
            <param name="fields">
            A comma-separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields.
            </param>
            <param name="includeFields">
            <see langword="true"/> if the fields specified are to be included in the result, <see langword="false"/> otherwise (defaults to
            <see langword="true"/>).
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the settings for the tenant.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TenantSettingsClient.UpdateAsync(Auth0.ManagementApi.Models.TenantSettingsUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the settings for the tenant.
            </summary>
            <param name="request">
            <see cref="T:Auth0.ManagementApi.Models.TenantSettingsUpdateRequest" /> containing the settings for the tenant which are to be updated.
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:Auth0.ManagementApi.Models.TenantSettings" /> containing the updated settings for the tenant.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.TicketsClient">
            <summary>
            Contains methods to access the /tickets endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TicketsClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.TicketsClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TicketsClient.CreateEmailVerificationTicketAsync(Auth0.ManagementApi.Models.EmailVerificationTicketRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an email verification ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.EmailVerificationTicketRequest"/> containing the details of the ticket to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Ticket"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.TicketsClient.CreatePasswordChangeTicketAsync(Auth0.ManagementApi.Models.PasswordChangeTicketRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a password change ticket.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.PasswordChangeTicketRequest"/> containing the details of the ticket to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Ticket"/>.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.UserBlocksClient">
            <summary>
            Contains methods to access the /user-blocks endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.UserBlocksClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.GetByIdentifierAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a user's blocks by identifier.
            </summary>
            <param name="identifier">The identifier of the user. Can be a user's email address, username or phone number.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UserBlocks"/> relating to the user requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.GetByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a user's blocks by user id.
            </summary>
            <param name="id">The id of the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.UserBlocks"/> relating to the user requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.UnblockByIdentifierAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unblock a user by their identifier.
            </summary>
            <param name="identifier">The identifier of the user to unblock. Can be a user's email address, username or phone number.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous unblock operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UserBlocksClient.UnblockByUserIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unblock a user by their id.
            </summary>
            <param name="id">The id of the user to unblock.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous unblock operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.Clients.UsersClient">
            <summary>
            Contains methods to access the /users endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.#ctor(Auth0.ManagementApi.IManagementConnection,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Auth0.ManagementApi.Clients.UsersClient"/>.
            </summary>
            <param name="connection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> used to make all API calls.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the endpoint to use in making API calls.</param>
            <param name="defaultHeaders">Dictionary containing default headers included with every request this client makes.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.AssignRolesAsync(System.String,Auth0.ManagementApi.Models.AssignRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Assigns Roles to a user.
            </summary>
            <param name="id">The ID of the user to assign roles to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignRolesRequest" /> containing the role IDs to assign to the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assign operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.CreateAsync(Auth0.ManagementApi.Models.UserCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new user.
            </summary>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserCreateRequest" /> containing the properties of the user to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.User"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteAsync(System.String)">
            <summary>
            Deletes a user.
            </summary>
            <param name="id">The id of the user to delete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteMultifactorProviderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a user's multifactor provider.
            </summary>
            <param name="id">The id of the user who multi factor provider to delete.</param>
            <param name="provider">The type of the multifactor provider. Supported values 'duo' or 'google-authenticator'.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAllAsync(Auth0.ManagementApi.Models.GetUsersRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Lists or search for users based on criteria.
            </summary>
            <param name="request">Specifies criteria to use when querying users.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of users.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets a user.
            </summary>
            <param name="id">The id of the user to retrieve.</param>
            <param name="fields">
            A comma separated list of fields to include or exclude (depending on includeFields) from the
            result, empty to retrieve all fields
            </param>
            <param name="includeFields">
            true if the fields specified are to be included in the result, false otherwise (defaults to
            true)
            </param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.User"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetLogsAsync(Auth0.ManagementApi.Models.GetUserLogsRequest,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve every log event for a specific user.
            </summary>
            <param name="request">Specifies criteria to use when querying logs for a user.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the log entries for the user.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetRolesAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Retrieve assigned roles for a specific user.
            </summary>
            <param name="userId">The user id of the roles to retrieve.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the roles for the user.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetUsersByEmailAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets all users by email address.
            </summary>
            <param name="email">The email address to search for.</param>
            <param name="fields"> A comma separated list of fields to include or exclude (depending on <paramref name="includeFields"/>) from the result, null to retrieve all fields.</param>
            <param name="includeFields">true if the fields specified are to be included in the result, false otherwise. Defaults to true.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing all users for this email address.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetEnrollmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of Guardian enrollments.
            </summary>
            <param name="id">The user_id of the user to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task representing the operation and potential return value.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.InvalidateRememberBrowserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Invalidate all remembered browsers for MFA.
            </summary>
            <param name="id">The user_id of the user which will have its remembered browsers for MFA invalidated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task representing the operation and potential return value.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GenerateRecoveryCodeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Generate new Guardian recovery code.
            </summary>
            <param name="id">The user_id of the user which guardian code will be regenerated.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task representing the operation and potential return value.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.LinkAccountAsync(System.String,Auth0.ManagementApi.Models.UserAccountLinkRequest,System.Threading.CancellationToken)">
            <summary>
            Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserAccountLinkRequest" /> containing details of the secondary account to link.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing details about this account link.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.LinkAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Links a secondary account to a primary account.
            </summary>
            <param name="id">The ID of the primary account.</param>
            <param name="primaryJwtToken">The JWT of the primary account.</param>
            <param name="secondaryJwtToken">The JWT for the secondary account you wish to link.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing details about this account link.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.RemoveRolesAsync(System.String,Auth0.ManagementApi.Models.AssignRolesRequest,System.Threading.CancellationToken)">
            <summary>
            Removes Roles from a user.
            </summary>
            <param name="id">The ID of the user to remove roles from.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignRolesRequest" /> containing the role IDs to remove to the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous remove operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.UnlinkAccountAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unlinks user accounts
            </summary>
            <param name="primaryUserId">The ID of the primary account.</param>
            <param name="provider">The type of the identity provider.</param>
            <param name="secondaryUserId">The ID for the secondary account.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> containing details about this account link.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.UpdateAsync(System.String,Auth0.ManagementApi.Models.UserUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a user.
            </summary>
            <param name="id">The id of the user to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.UserUpdateRequest" /> containing the information you wish to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly updated <see cref="T:Auth0.ManagementApi.Models.User"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetPermissionsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Get the permissions assigned to the user.
            </summary>
            <param name="id">The id of the user to obtain the permissions for.</param>
            <param name="pagination">Specifies <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> to use in requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the assigned permissions for this user.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.AssignPermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Assign permissions to a user.
            </summary>
            <param name="id">The ID of the user to assign permissions to.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to assign to the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous assignment operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.RemovePermissionsAsync(System.String,Auth0.ManagementApi.Models.AssignPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Removes permissions assigned to a user.
            </summary>
            <param name="id">The ID of the user to remove permissions from.</param>
            <param name="request">A <see cref="T:Auth0.ManagementApi.Models.AssignPermissionsRequest" /> containing the permission identifiers to remove from the user.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous remove operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAllOrganizationsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Lists organizations for a user.
            </summary>
            <param name="userId">The ID of the user for which you want to retrieve the organizations.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of organizations.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAuthenticationMethodsAsync(System.String,Auth0.ManagementApi.Paging.PaginationInfo,System.Threading.CancellationToken)">
            <summary>
            Gets a list of authentication methods.
            </summary>
            <param name="userId">The ID of the user for which you want to retrieve the authentication methods.</param>
            <param name="pagination">Specifies pagination info to use when requesting paged results.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>An <see cref="T:Auth0.ManagementApi.Paging.IPagedList`1"/> containing the list of authentication methods.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.GetAuthenticationMethodAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an authentication method for a given user.
            </summary>
            <param name="userId">The ID of the user for which you want to retrieve the authentication method.</param>
            <param name="authenticationMethodId">The ID of the authentication method you want to retrieve.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/> that was requested.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.CreateAuthenticationMethodAsync(System.String,Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an authentication method for a given user.
            </summary>
            <remarks>
            Authentication methods created via this endpoint will be auto confirmed and should already have verification completed.
            </remarks>
            <param name="userId">The ID of the user for which you want to create the authentication method.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest" /> containing the properties of the authentication method to create.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The newly created <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.UpdateAuthenticationMethodsAsync(System.String,System.Collections.Generic.IList{Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest},System.Threading.CancellationToken)">
            <summary>
            Updates all authentication methods by replacing them with the given ones.
            </summary>
            <param name="userId">The ID of the user for which you want to update the authentication methods.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest" /> containing the properties of the authentication methods to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The updated list of <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.UpdateAuthenticationMethodAsync(System.String,System.String,Auth0.ManagementApi.Models.Users.AuthenticationMethodUpdateRequest,System.Threading.CancellationToken)">
            <summary>
            Update an authentication methods.
            </summary>
            <param name="userId">The ID of the user for which you want to update the authentication methods</param>
            <param name="authenticationMethodId">The ID of the authentication method you want to update.</param>
            <param name="request">The <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethodUpdateRequest" /> containing the properties of the authentication methods to update.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The updated <see cref="T:Auth0.ManagementApi.Models.Users.AuthenticationMethod"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteAuthenticationMethodsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes all authentication methods for the given user.
            </summary>
            <param name="userId">The ID of the user for which you want to update the authentication methods.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Clients.UsersClient.DeleteAuthenticationMethodAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an authentication method by id,.
            </summary>
            <param name="userId">The ID of the user for which you want to delete the authentication methods.</param>
            <param name="authenticationMethodId">The ID of the authentication method you want to delete.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous delete operation.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.ExtensionMethods">
            <summary>
            Provider of generic extension methods.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.ExtensionMethods.AddIfNotEmpty(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Adds a key and value to a dictionary provided the value
            is not <see langword="null"/> or empty.
            </summary>
            <param name="dictionary">Dictionary to add the key and value to.</param>
            <param name="key">Key of the item to add if <paramref name="value"/> is not <see langword="null"/> or empty.</param>
            <param name="value">Value of the item to add if it is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:Auth0.ManagementApi.ExtensionMethods.ToEnumString``1(``0)">
            <summary>
            Get the <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/> value for a given <see cref="T:System.Enum"/> value.
            </summary>
            <typeparam name="T">Type of enum.</typeparam>
            <param name="value">Value of the enum.</param>
            <returns>Name of the enum derived from the <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/> value.</returns>
        </member>
        <member name="T:Auth0.ManagementApi.HttpClientManagementConnection">
            <summary>
            Implements <see cref="T:Auth0.ManagementApi.IManagementConnection"/> using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.HttpClientManagementConnection.#ctor(System.Net.Http.HttpClient,Auth0.ManagementApi.HttpClientManagementConnectionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.HttpClientManagementConnection"/> class.
            </summary>
            <param name="httpClient">Optional <see cref="T:System.Net.Http.HttpClient"/> to use. If not specified one will
            be created and be used for all requests made by this instance.</param>
            <param name="options">Optional <see cref="T:Auth0.ManagementApi.HttpClientManagementConnectionOptions"/> to use.</param>
        </member>
        <member name="M:Auth0.ManagementApi.HttpClientManagementConnection.#ctor(System.Net.Http.HttpMessageHandler,Auth0.ManagementApi.HttpClientManagementConnectionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.HttpClientManagementConnection"/> class.
            </summary>
            <param name="handler"><see cref="T:System.Net.Http.HttpMessageHandler"/> to use with the managed 
            <see cref="T:System.Net.Http.HttpClient"/> that will be created and used for all requests made
            by this instance.</param>
            <param name="options">Optional <see cref="T:Auth0.ManagementApi.HttpClientManagementConnectionOptions"/> to use.</param>
        </member>
        <member name="M:Auth0.ManagementApi.HttpClientManagementConnection.GetAsync``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Newtonsoft.Json.JsonConverter[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Auth0.ManagementApi.HttpClientManagementConnection.SendAsync``1(System.Net.Http.HttpMethod,System.Uri,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Auth0.ManagementApi.FileUploadParameter},Newtonsoft.Json.JsonConverter[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Auth0.ManagementApi.HttpClientManagementConnection.Dispose(System.Boolean)">
            <summary>
            Disposes of any owned disposable resources such as the underlying <see cref="T:System.Net.Http.HttpClient"/> if owned.
            </summary>
            <param name="disposing">Whether we are actually disposing (<see langword="true"/>) or not (<see langword="false"/>).</param>
        </member>
        <member name="M:Auth0.ManagementApi.HttpClientManagementConnection.Dispose">
            <summary>
            Disposes of any owned disposable resources such as the underlying <see cref="T:System.Net.Http.HttpClient"/> if owned.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.HttpClientManagementConnectionOptions.NumberOfHttpRetries">
            <summary>
             Set the maximum number of consecutive retries for Management API requests that fail due to rate-limits being reached.
             By default, rate-limited requests will be retries a maximum of three times.To disable retries on rate-limit
             errors, set this value to zero.
            </summary>
            <remarks>Must be a number between zero (do not retry) and ten.</remarks>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Actions">
            <summary>
            Contains all the methods to call the /actions endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.AttackProtection">
            <summary>
            Contains all the methods to call the /attack-protection endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.BlacklistedTokens">
            <summary>
            Contains all the methods to call the /blacklists/tokens endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Branding">
            <summary>
            Contains all the methods to call the /branding endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.ClientGrants">
            <summary>
            Contains all the methods to call the /client-grants endpoints
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Clients">
            <summary>
            Contains all the methods to call the /clients endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Connections">
            <summary>
            Contains all the methods to call the /connections endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.CustomDomains">
            <summary>
            Contains all the methods to call the /custom-domains endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.DeviceCredentials">
            <summary>
            Contains all the methods to call the /device-credentials endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.EmailProvider">
            <summary>
            Contains all the methods to call the /emails/provider endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.EmailTemplates">
            <summary>
            Contains all the methods to call the /email-templates endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Grants">
            <summary>
            Contains all the methods to call the /grants endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Guardian">
            <summary>
            Contains all the methods to call the /guardian endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Jobs">
            <summary>
            Contains all the methods to call the /jobs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Keys">
            <summary>
            Contains all the methods to call the /keys endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Logs">
            <summary>
            Contains all the methods to call the /logs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.LogStreams">
            <summary>
            Contains all the methods to all the /log-streams endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Organizations">
            <summary>
            Contains all the methods to call the /organizations endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Prompts">
            <summary>
            Contains all the methods to call the /prompts endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.ResourceServers">
            <summary>
            Contains all the methods to call the /resource-servers endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Roles">
            <summary>
            Contains all the methods to call the /roles endpoints.
            </summary>
            <value>The roles.</value>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.RulesConfig">
            <summary>
            Contains all the methods to call the /rules-configs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Rules">
            <summary>
            Contains all the methods to call the /rules endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Hooks">
            <summary>
            Contains all the methods to call the /hooks endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Stats">
            <summary>
            Contains all the methods to call the /stats endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.TenantSettings">
            <summary>
            Contains all the methods to call the /tenants/settings endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Tickets">
            <summary>
            Contains all the methods to call the /tickets endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.UserBlocks">
            <summary>
            Contains all the methods to call the /user-blocks endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.IManagementApiClient.Users">
            <summary>
            Contains all the methods to call the /users endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.IManagementApiClient.UpdateAccessToken(System.String)">
            <summary>
            Update the Access Token used with every request.
            </summary>
            <param name="token">The new and valid Auth0 Management API v2 token.</param>
        </member>
        <member name="T:Auth0.ManagementApi.IManagementConnection">
            <summary>
            Interface for connectivity between <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> and
            the remote server.
            </summary>
            <remarks>
            A default implementation of this using <see cref="T:System.Net.Http.HttpClient"/> is included as
            <see cref="T:Auth0.ManagementApi.HttpClientManagementConnection"/>.
            You should mock this interface to perform unit testing of code that uses
            <see cref="T:Auth0.ManagementApi.ManagementApiClient"/>.
            </remarks>
        </member>
        <member name="M:Auth0.ManagementApi.IManagementConnection.GetAsync``1(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Newtonsoft.Json.JsonConverter[],System.Threading.CancellationToken)">
            <summary>
            Perform a HTTP GET operation against a given <see cref="T:System.Uri"/> and return the materialized response body as <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of object to deserialize the result content as.</typeparam>
            <param name="uri"><see cref="T:System.Uri"/> to perform the GET request against.</param>
            <param name="headers">Dictionary containing additional headers that may override the defaults.</param>
            <param name="converters">Optional array of <see cref="T:Newtonsoft.Json.JsonConverter"/>s used to deserialize the resulting <typeparamref name="T"/>.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/> representing the async operation containing response body as <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.IManagementConnection.SendAsync``1(System.Net.Http.HttpMethod,System.Uri,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Auth0.ManagementApi.FileUploadParameter},Newtonsoft.Json.JsonConverter[],System.Threading.CancellationToken)">
            <summary>
            Perform a HTTP operation against a given <see cref="T:System.Uri"/> and return any materialized response body as <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of object to deserialize the result content as.</typeparam>
            <param name="method"><see cref="T:System.Net.Http.HttpMethod"/> to use in performing the request.</param>
            <param name="uri"><see cref="T:System.Uri"/> to perform the request against.</param>
            <param name="body">Payload to send to the server.
            If specified as a Dictionary&lt;string, string&gt; then <see cref="T:System.Net.Http.FormUrlEncodedContent"/> is expected,
            otherwise <see cref="T:System.Net.Http.StringContent"/> containing the JSON representation of the object is expected.</param>
            <param name="headers">Dictionary containing additional headers that may override the defaults.</param>
            <param name="files">Optional <see cref="T:System.Collections.Generic.IList`1"/> containing file contents to upload as a <see cref="T:System.Net.Http.MultipartFormDataContent"/> post.</param>
            <param name="converters">Optional array of <see cref="T:Newtonsoft.Json.JsonConverter"/>s used to deserialize the resulting <typeparamref name="T"/>.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/> representing the async operation containing response body as <typeparamref name="T"/>.</returns>
            <remarks>
            <paramref name="files"/> can only be specified if <paramref name="body"/> is a Dictionary%lt;string, object%gt;"/>.
            </remarks>
        </member>
        <member name="T:Auth0.ManagementApi.ManagementApiClient">
            <summary>
            Represents the Management API client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Actions">
            <summary>
            Contains all the methods to call the /actions endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.AttackProtection">
            <summary>
            Contains all the methods to call the /attack-protection endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.BlacklistedTokens">
            <summary>
            Contains all the methods to call the /blacklists/tokens endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Branding">
            <summary>
            Contains all the methods to call the /branding endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.ClientGrants">
            <summary>
            Contains all the methods to call the /client-grants endpoints
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Clients">
            <summary>
            Contains all the methods to call the /clients endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Connections">
            <summary>
            Contains all the methods to call the /connections endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.CustomDomains">
            <summary>
            Contains all the methods to call the /custom-domains endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.DeviceCredentials">
            <summary>
            Contains all the methods to call the /device-credentials endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.EmailProvider">
            <summary>
            Contains all the methods to call the /emails/provider endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.EmailTemplates">
            <summary>
            Contains all the methods to call the /email-templates endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Grants">
            <summary>
            Contains all the methods to call the /grants endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Guardian">
            <summary>
            Contains all the methods to call the /guardian endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Jobs">
            <summary>
            Contains all the methods to call the /jobs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Keys">
            <summary>
            Contains all the methods to call the /keys endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Logs">
            <summary>
            Contains all the methods to call the /logs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.LogStreams">
            <summary>
            Contains all the methods to all the /log-streams endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Organizations">
            <summary>
            Contains all the methods to call the /organizations endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Prompts">
            <summary>
            Contains all the methods to call the /prompts endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.ResourceServers">
            <summary>
            Contains all the methods to call the /resource-servers endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Roles">
            <summary>
            Contains all the methods to call the /roles endpoints.
            </summary>
            <value>The roles.</value>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.RulesConfig">
            <summary>
            Contains all the methods to call the /rules-configs endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Rules">
            <summary>
            Contains all the methods to call the /rules endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Hooks">
            <summary>
            Contains all the methods to call the /hooks endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Stats">
            <summary>
            Contains all the methods to call the /stats endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.TenantSettings">
            <summary>
            Contains all the methods to call the /tenants/settings endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Tickets">
            <summary>
            Contains all the methods to call the /tickets endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.UserBlocks">
            <summary>
            Contains all the methods to call the /user-blocks endpoints.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.ManagementApiClient.Users">
            <summary>
            Contains all the methods to call the /users endpoints.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.Uri,Auth0.ManagementApi.IManagementConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">A valid Auth0 Management API v2 token.</param>
            <param name="baseUri"><see cref="T:System.Uri"/> of the tenant to manage.</param>
            <param name="managementConnection"><see cref="T:Auth0.ManagementApi.IManagementConnection"/> to facilitate communication with server.</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.#ctor(System.String,System.String,Auth0.ManagementApi.IManagementConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.ManagementApiClient"/> class.
            </summary>
            <param name="token">A valid Auth0 Management API v2 token.</param>
            <param name="domain">Your Auth0 domain. <example>tenant.auth0.com</example></param>
            <param name="connection"></param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.UpdateAccessToken(System.String)">
            <summary>
            Update the Access Token used with every request.
            </summary>
            <param name="token">The new and valid Auth0 Management API v2 token.</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.Dispose(System.Boolean)">
            <summary>
            Disposes of any owned disposable resources.
            </summary>
            <param name="disposing">Whether we are actually disposing (<see langword="true"/>) or not (<see langword="false"/>).</param>
        </member>
        <member name="M:Auth0.ManagementApi.ManagementApiClient.Dispose">
            <summary>
            Disposes of any owned disposable resources.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AccountLinkResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.Connection">
            <summary>
            The name of the connection for the identity.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.IsSocial">
            <summary>
            Indicates whether this is a social connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.ProfileData">
            <summary>
            The profile data
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.Provider">
            <summary>
            The type of identity provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponse.UserId">
            <summary>
            The unique identifier for the user for the identity.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AccountLinkResponseProfileData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponseProfileData.Email">
            <summary>
            The email address for the profile.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AccountLinkResponseProfileData.EmailVerified">
            <summary>
            Indicates whether the <see cref="P:Auth0.ManagementApi.Models.AccountLinkResponseProfileData.Email"/> is verified.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.Action">
            <summary>
            Represents an action in Auth0
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.Id">
            <summary>
            The unique ID of the action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.Status">
            <summary>
            The build status of this action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.DeployedVersion">
            <summary>
            The version of the action that is currently deployed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.AllChangesDeployed">
            <summary>
            True if all of an Action's contents have been deployed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.CreatedAt">
            <summary>
            The time when this action was created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.UpdatedAt">
            <summary>
            The time when this action was updated.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Action.SupportedTriggers">
            <summary>
            The list of triggers that this action supports.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionBase.Name">
            <summary>
            The name of an action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionBase.Code">
            <summary>
            The source code of the action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionBase.Dependencies">
            <summary>
            The list of third party npm modules, and their versions, that this action depends on.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionBase.Runtime">
            <summary>
            The Node runtime. For example: node12, defaults to node12
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionBase.Secrets">
            <summary>
            The list of secrets that are included in an action or a version of an action.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.ActionDependency">
            <summary>
            Represent an npm dependency for an action or an action's version.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionDependency.Name">
            <summary>
            The name of the npm module, e.g. 'lodash'
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionDependency.Version">
            <summary>
            The version of the npm module, e.g. '4.17.1'
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecution.Id">
            <summary>
            Identifies a specific execution.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecution.TriggerId">
            <summary>
            The actions extensibility point.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecution.Status">
            <summary>
            The overall status of an execution.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecution.Results">
            <summary>
            Captures the results of a single action being executed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecution.CreatedAt">
            <summary>
            The time that the execution was started.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecution.UpdatedAt">
            <summary>
            The time that the execution finished executing.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.ActionExecutionResult">
            <summary>
            Captures the results of a single action being executed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecutionResult.ActionName">
            <summary>
            The name of the action that was executed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecutionResult.StartedAt">
            <summary>
            The time when the action was started.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionExecutionResult.EndedAt">
            <summary>
            The time when the action finished executing.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionSecret.Name">
            <summary>
            The name of the particular secret, e.g. API_KEY.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionSecret.UpdatedAt">
            <summary>
            The time when the secret was last updated.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionSecret.Value">
            <summary>
            The value of the particular secret, e.g. secret123. A secret's value can only be set upon creation. A secret's value will never be returned by the API.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionSupportedTrigger.Id">
            <summary>
            The actions extensibility point
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionSupportedTrigger.Version">
            <summary>
            The version of a trigger. v1, v2, etc.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.ActionVersion">
            <summary>
            Represents a version for an action in Auth0
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Id">
            <summary>
            The unique id of an action version.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Code">
            <summary>
            The source code of this specific version of the action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Runtime">
            <summary>
            The Node runtime. For example: `node12`
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Number">
            <summary>
            The index of this version in list of versions for the action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Deployed">
            <summary>
            Indicates if this specific version is the currently one deployed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Dependencies">
            <summary>
            The list of third party npm modules, and their versions, that this specific version depends on.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Status">
            <summary>
            The build status of this specific version.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.CreatedAt">
            <summary>
            The time when this version was created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.UpdatedAt">
            <summary>
            The time when a version was updated. Versions are never updated externally. Only Auth0 will update an action version as it is being built.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Action">
            <summary>
            The action to which this version belongs.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Secrets">
            <summary>
            The list of secrets that are included in the version.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.ActionVersion.Errors">
            <summary>
            Any errors that occurred while the version was being built.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.CreateActionRequest">
            <summary>
            Request configuration for creating an action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.CreateActionRequest.SupportedTriggers">
            <summary>
            The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.DeleteActionRequest">
            <summary>
            Request configuration for deleting an action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.DeleteActionRequest.Force">
            <summary>
            Force action deletion detaching bindings
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.GetActionsRequest">
            <summary>
            Request configuration for retrieving all actions.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.GetActionsRequest.TriggerId">
            <summary>
            An actions extensibility point.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.GetActionsRequest.ActionName">
            <summary>
            The name of the action to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.GetActionsRequest.Deployed">
            <summary>
             Optional filter to only retrieve actions that are deployed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.GetActionsRequest.Installed">
            <summary>
            Optional. When true, return only installed actions. When false, return only custom actions. Returns all actions by default.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.Trigger">
            <summary>
            Represents a Trigger in Auth0
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Trigger.Id">
            <summary>
            The actions extensibility point.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Trigger.Runtimes">
            <summary>
            Runtimes supported by this trigger.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Trigger.DefaultRuntime">
            <summary>
            Runtime that will be used when none is specified when creating an action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Trigger.Version">
            <summary>
            The version of a trigger. v1, v2, etc.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.Trigger.Status">
            <summary>
            The trigger's status.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.TriggerBinding">
            <summary>
            Represents a Trigger Binding in Auth0
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.TriggerBinding.Id">
            <summary>
            The unique ID of this binding.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.TriggerBinding.TriggerId">
            <summary>
            The actions extensibility point.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.TriggerBinding.Action">
            <summary>
            The connected action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.TriggerBinding.CreatedAt">
            <summary>
            The time when the binding was created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.TriggerBinding.UpdatedAt">
            <summary>
            The time when the binding was updated.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.TriggerBinding.DisplayName">
            <summary>
            The name of the binding.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.UpdateActionRequest">
            <summary>
            Request configuration for updating an action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingEntry.BindingRef.Type">
            <summary>
             How the action is being referred to: `action_id` or `action_name`.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingEntry.BindingRef.Value">
            <summary>
            The id or name of an action that is being bound to a trigger.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingEntry.Ref">
            <summary>
            A reference to an action. An action can be referred to by ID or by Name.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingEntry.DisplayName">
            <summary>
            The name of the binding.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingsRequest">
            <summary>
            Request configuration to update the actions that are bound (i.e. attached) to a trigger.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Actions.UpdateTriggerBindingsRequest.Bindings">
            <summary>
            The actions that will be bound to this trigger. The order in which they are included will be the order in which they are executed.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Addons">
            <summary>
            Addons are extensions associated with an Application in Auth0. Usually, they are 3rd party APIs used by the app that Auth0 generates access tokens for 
            (e.g. Salesforce, Azure Service Bus, Azure Mobile Services, SAP, etc).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.AmazonWebServices">
            <summary>
            Settings for Amazon Web Services Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.AzureMobileServices">
            <summary>
            Settings for Azure Mobile Services Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.AzureServiceBus">
            <summary>
            Settings for Azure Service Bus Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Box">
            <summary>
            Settings for Box Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.CloudBees">
            <summary>
            Settings for CloudBees Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Concur">
            <summary>
            Settings for Concur Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.DropBox">
            <summary>
            Settings for Dropbox Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.EchoSign">
            <summary>
            Settings for EchoSign Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Egnyte">
            <summary>
            Settings for Egnyte Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.FireBase">
            <summary>
            Settings for Firebase Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.NewRelic">
            <summary>
            Settings for New Relic Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Office365">
            <summary>
            Settings for Office 365 Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SalesForce">
            <summary>
            Settings for Salesforce Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SalesForceApi">
            <summary>
            Settings for Salesforce API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SalesForceSandboxApi">
            <summary>
            Settings for Salesforce Sandbox API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SamlP">
            <summary>
            Settings for SAML2 Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SapApi">
            <summary>
            Settings for SAP API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SharePoint">
            <summary>
            Settings for Sharepoint Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.SpringCM">
            <summary>
            Settings for SpringCM Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.WebApi">
            <summary>
            Settings for Web API Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.WsFed">
            <summary>
            Settings for WS-FED Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Zendesk">
            <summary>
            Settings for Zendesk Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Addons.Zoom">
            <summary>
            Settings for Zoom Addon
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignedUser.UserId">
            <summary>
            A unique identifier of the user per identity provider, same for all apps (e.g.: google-oauth2|103547991597142817347).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignedUser.Picture">
            <summary>
            URL pointing to the user picture (if not available, will use gravatar.com with the email).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignedUser.FullName">
            <summary>
            The full name of the user (e.g.: John Foo).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignedUser.Email">
            <summary>
            The user's email address.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AssignRolesRequest">
            <summary>
            Contains details of roles that should be assigned to a user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignRolesRequest.Roles">
            <summary>
            Role IDs to assign to the user.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AssignUsersRequest">
            <summary>
            Contains details of users that should be assigned to a role.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignUsersRequest.Users">
            <summary>
            User IDs to assign to the role.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.AssignPermissionsRequest">
            <summary>
            Contains details of permissions that should be assigned to a role.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AssignPermissionsRequest.Permissions">
            <summary>
            User IDs to assign to the role.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetectionStage.StageEntry.Shields">
            <summary>
            Action to take when a breached password is detected. Possible values: "block", "admin_notification".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetectionStage.PreUserRegistration">
            <summary>
            Configuration options that apply before every user registration attempt.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection.Enabled">
            <summary>
            Whether or not breached password detection is active.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection.Shields">
            <summary>
            Action to take when a breached password is detected. Possible values: "block", "user_notification", "admin_notification".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection.AdminNotificationFrequency">
            <summary>
            When "admin_notification" is enabled, determines how often email notifications are sent. Possible values: "immediately", "daily", "weekly", "monthly".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection.Method">
            <summary>
            The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: "standard", "enhanced".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BreachedPasswordDetection.Stage">
            <summary>
            Holds per-stage configuration options (shields).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection.Enabled">
            <summary>
            Whether or not brute force attack protections are active.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection.Shields">
            <summary>
            Action to take when a brute force protection threshold is violated. Possible values: "block", "user_notification".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection.Allowlist">
            <summary>
            List of trusted IP addresses that will not have attack protection enforced against them.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection.Mode">
            <summary>
            Account Lockout: Determines whether or not IP address is used when counting failed attempts. Possible values: "count_per_identifier_and_ip", "count_per_identifier".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.BruteForceProtection.MaxAttempts">
            <summary>
            Maximum number of unsuccessful attempts.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.Stage.StageEntry.MaxAttempts">
            <summary>
            Total number of attempts allowed per day.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.Stage.StageEntry.Rate">
            <summary>
            Interval of time, given in milliseconds, at which new attempts are granted.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.Stage.PreLogin">
            <summary>
            Configuration options that apply before every login attempt.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.Stage.PreUserRegistration">
            <summary>
            Configuration options that apply before every user registration attempt.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling.Enabled">
            <summary>
            Whether or not suspicious IP throttling attack protections are active.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling.Shields">
            <summary>
            Action to take when a suspicious IP throttling threshold is violated. Possible values: "block", "admin_notification".
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling.Allowlist">
            <summary>
            List of trusted IP addresses that will not have attack protection enforced against them.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.AttackProtection.SuspiciousIpThrottling.Stage">
            <summary>
            Holds per-stage configuration options (max_attempts and rate).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BackchannelLogoutInitiators.Mode">
            <summary>
            The mode property determines the configuration method for enabling initiators.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BackchannelLogoutInitiators.SelectedInitiators">
            <summary>
            The Selected Initiators are the logout initiators to be enabled for the client.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.BlacklistedToken">
            <summary>
            Represents a blacklisted token.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.BlacklistedTokenBase">
            <summary>
            Base class for blacklisted tokens.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BlacklistedTokenBase.Aud">
            <summary>
            Gets or sets the JWT's aud claim. The Client identifier of the client for which it was issued.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BlacklistedTokenBase.Jti">
            <summary>
            Gets or sets the jti of the JWT to be blacklisted.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.BlacklistedTokenCreateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Branding">
            <summary>
            Represents the Auth0 Tenant's branding settings
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingBase.Colors">
            <summary>
            Custom color settings.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingBase.FaviconUrl">
            <summary>
            URL for the favicon. Must use HTTPS.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingBase.LogoUrl">
            <summary>
            URL for the logo. Must use HTTPS.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingBase.Font">
            <summary>
            Custom font settings.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingColors.Primary">
            <summary>
            Accent color.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingColors.PageBackground">
            <summary>
            Page Background Color or Gradient.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.BrandingFont.Url">
            <summary>
            URL for the custom font. The URL must point to a font file and not a stylesheet. Must use HTTPS.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Client">
            <summary>
            Represents a client (App) in Auth0
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.ClientId">
            <summary>
            The id of the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.SigningKeys">
            <summary>
            Client signing keys.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.ApplicationType">
            <summary>
            The type of application this client represents
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.TokenEndpointAuthMethod">
            <summary>
            Defines the requested authentication method for the token endpoint.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Client.ClientAuthenticationMethods">
            <summary>
            The client's authentication methods
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientAuthenticationMethods">
            <summary>
            Structure for a client's authentication methods
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.PrivateKeyJwt">
            <summary>
            Structure for credentials using Private Key JWT
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CredentialId">
            <summary>
            Structure for a client's credential.
            </summary>
            <remarks>
            Only contains the credential's id.
            </remarks>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientApplicationType">
            <summary>
            The type of application for a <see cref="T:Auth0.ManagementApi.Models.Client"/>
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Box">
            <summary>
            Box (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Cloudbees">
            <summary>
            Cloudbees (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Concur">
            <summary>
            Concur (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Dropbox">
            <summary>
            Dropbox (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Echosign">
            <summary>
            Adobe Echosign (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Egnyte">
            <summary>
            Egnyte (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.MsCrm">
            <summary>
            Microsoft Dynamics CRM (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Native">
            <summary>
            Mobile or Desktop, apps that run natively in a device.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.NewRelic">
            <summary>
            New Relic (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.NonInteractive">
            <summary>
            CLI, Daemons or Services running on your backend.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Office365">
            <summary>
            Office 365 (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.RegularWeb">
            <summary>
            Traditional web app (with refresh).
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Rms">
            <summary>
            Active Directory RMS (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Salesforce">
            <summary>
            Salesforce (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Sentry">
            <summary>
            Sentry (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.SharePoint">
            <summary>
            SharePoint (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Slack">
            <summary>
            Slack (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.SpringCm">
            <summary>
            SpringCM (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Spa">
            <summary>
            A JavaScript front-end app that uses an API.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Zendesk">
            <summary>
            Zendesk (SSO)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.ClientApplicationType.Zoom">
            <summary>
            Zoom (SSO)
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientBase">
            <summary>
            Base class for clients.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AddOns">
            <summary>
            Gets or sets the addons which are associated with the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AllowedClients">
            <summary>
            Ids of clients that will be allowed to perform delegation requests. Clients that will be allowed to make delegation request.
            </summary>
            <remarks>
            By default, all your clients will be allowed. This field allows you to specify specific clients.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AllowedLogoutUrls">
            <summary>
            The URLs that Auth0 can redirect to after logout
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.AllowedOrigins">
            <summary>
            A set of URLs that represents valid origins for CORS.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.WebOrigins">
            <summary>
            A set of allowed origins for use with Cross-Origin Authentication and web message response mode.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.InitiateLoginUri">
            <summary>
            The default login initiation endpoint.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Callbacks">
            <summary>
            A set of URLs that are valid to call back from Auth0 when authenticating users.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ClientAliases">
            <summary>
            List of audiences for SAML protocol.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ClientMetaData">
            <summary>
            Metadata associated with this client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ClientSecret">
            <summary>
            The secret used to sign tokens for the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.IsCustomLoginPageOn">
            <summary>
            True if the custom login page is to be used, false otherwise. Defaults to true.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.IsFirstParty">
            <summary>
            Whether this client a first party client or not
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.CustomLoginPage">
            <summary>
            The content (HTML, CSS, JS) of the custom login page.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.CustomLoginPagePreview">
             <summary>
            
             </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.EncryptionKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.FormTemplate">
            <summary>
            Form template for WS-Federation protocol.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.GrantTypes">
            <summary>
            A set of grant types that the client is authorized to use
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.JwtConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Mobile">
             <summary>
            
             </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Name">
            <summary>
            The name of the client. Must contain at least one character. Does not allow '&lt;' or '&gt;'.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Description">
            <summary>
            The description of the client. Max character count is 140
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.LogoUri">
            <summary>
            The logo_uri of the client. The URL of the logo to display for the application,
            if none is set the default badge for this type of application will be shown.
            Recommended size is 150x150 pixels
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.OidcConformant">
            <summary>
            Indicates whether this client will conform to strict OIDC specifications.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.ResourceServers">
            <summary>
            A list of resource servers (APIs) that the client is authorized to request access tokens for, using the Client Credentials exchange.
            </summary>
            <remarks>
            This is a legacy structure. If you want to grant Resource Server (API) access to clients, please use <see cref="P:Auth0.ManagementApi.ManagementApiClient.ClientGrants"/> instead.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.Sso">
            <summary>
            True to use Auth0 instead of the IdP to do Single Sign On, false otherwise.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.RefreshToken">
            <summary>
            Configuration of refresh tokens for a client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.OrganizationUsage">
            <summary>
            Organization usage for a client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.OrganizationRequireBehavior">
            <summary>
            Defines how to proceed during an authentication transaction when organization usage is required.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.CrossOriginAuthentication">
            <summary>
            Whether this client can be used to make cross-origin authentication requests (true) or it is not allowed to make such requests (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientBase.RequirePushedAuthorizationRequests">
            <summary>
            Makes the use of Pushed Authorization Requests mandatory for this client.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientCreateRequest">
            <summary>
            Requests structure for creating a new client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCreateRequest.IsHerokuApp">
            <summary>
            True if the client is a heroku application, false otherwise
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCreateRequest.ApplicationType">
            <summary>
            The type of application this client represents
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCreateRequest.TokenEndpointAuthMethod">
            <summary>
            Defines the requested authentication method for the token endpoint.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCreateRequest.ClientAuthenticationMethods">
            <summary>
            Defines the client authentication methods to use
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CreateClientAuthenticationMethods">
            <summary>
            Structure for creating new client authentication methods
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CreatePrivateKeyJwt">
            <summary>
            Structure for creating a new client credential using Private Key JWT
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientCredentialCreateRequest">
            <summary>
            Structure for creating a new client credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialCreateRequest.CredentialType">
            <summary>
            The type of the credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialCreateRequest.Name">
            <summary>
            The name of the credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialCreateRequest.Pem">
            <summary>
            The value of the credential in PEM format.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialCreateRequest.Algorithm">
            <summary>
            Algorithm which will be used with the credential. Can be one of RS256, RS384, PS256. If not specified, RS256 will be used.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialCreateRequest.ParseExpiryFromCert">
            <summary>
            Parse expiry from x509 certificate. If true, attempts to parse the expiry date from the provided PEM.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialCreateRequest.ExpiresAt">
            <summary>
            The date representing the expiration of the credential. If not specified (not recommended), the credential never expires.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientCredentialUpdateRequest">
            <summary>
            Structure for updating a client credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientCredentialUpdateRequest.ExpiresAt">
            <summary>
            The date representing the expiration of the credential. If not specified (not recommended), the credential never expires.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrant">
            <summary>
            Represents a Client Grant
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrant.Id">
            <summary>
            Gets or sets the identifier for a Client Grant.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrantBase">
            <summary>
            Base class for Client Grants
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.Audience">
            <summary>
            Gets or sets the audience
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.ClientId">
            <summary>
            Gets or sets the identifier of the <see cref="T:Auth0.ManagementApi.Models.Client"/>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.Scope">
            <summary>
            Gets or sets the list of scopes
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.OrganizationUsage">
            <summary>
            Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
            </summary>
            <remarks>
            Possible values: [deny, allow, require]
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantBase.AllowAnyOrganization">
            <summary>
            If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrantCreateRequest">
            <summary>
            Request structure for creating a new Client Grant
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientGrantUpdateRequest">
            <summary>
            Request structure for updating a new Client Grant
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantUpdateRequest.Scope">
            <summary>
            Gets or sets the list of scopes
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantUpdateRequest.OrganizationUsage">
            <summary>
            Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
            </summary>
            <remarks>
            Possible values: [deny, allow, require]
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientGrantUpdateRequest.AllowAnyOrganization">
            <summary>
            If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientResourceServerAssociation.Identifier">
            <summary>
            The resource server (API) identifier.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientResourceServerAssociation.Scopes">
            <summary>
            The scopes granted to the client to access the resource server.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ClientUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientUpdateRequest.ApplicationType">
            <summary>
            The type of application this client represents
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientUpdateRequest.TokenEndpointAuthMethod">
            <summary>
            Defines the requested authentication method for the token endpoint.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ClientUpdateRequest.ClientAuthenticationMethods">
            <summary>
            Defines the client authentication methods to use
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Connection">
            <summary>
            Connection object as returned from API calls.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Connection.Id">
            <summary>
            The connection's identifier.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Connection.Strategy">
            <summary>
            The identity provider identifier for the connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Connection.ProvisioningTicketUrl">
            <summary>
            The provisioning ticket URL for AD / LDAP connections
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ConnectionBase">
            <summary>
            Base class for connections which includes both request and responses.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.Name">
            <summary>
            The name of the connection.
            </summary>
            <remarks>
            Must start with an alphanumeric characters and can only contain alphanumeric characters and '-'. Max length 35.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.DisplayName">
            <summary>
            The text used on the login button.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.Metadata">
            <summary>
            Optional metadata for the connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.Options">
            <summary>
            The options for the connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.Realms">
            <summary>
            Defines the realms for which the connection will be used (ie: email domains). If the array is empty or the property is not specified, the connection name will be added as realm. Maximum of 10 items.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.EnabledClients">
            <summary>
            The identifiers of the clients for which the connection is to be enabled. If the array is empty or the property is not specified, no clients are enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.ShowAsButton">
            <summary>
            True to show this connection as a button on login, false otherwise.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionBase.IsDomainConnection">
            <summary>
            Whether the connection is domain level (true), or not (false).
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ConnectionCreateRequest">
            <summary>
            Specifies the properies for creating a new connection.
            </summary>
            <remarks>
            At least the <see cref="P:Auth0.ManagementApi.Models.ConnectionBase.Name"/> and <see cref="P:Auth0.ManagementApi.Models.ConnectionCreateRequest.Strategy"/> properties are required.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ConnectionCreateRequest.Strategy">
            <summary>
            The identity provider identifier for the connection.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ConnectionUpdateRequest">
            <summary>
            Specifies the properies for updating an existing connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest.EmailAddress">
            <summary>
            Alternate email to which the enrollment email will be sent. Optional - by default, the email will be sent to the
            user's default address
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest.MustSendMail">
            <summary>
            Indicates whether an email must be sent to the user to start the enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketRequest.UserId">
            <summary>
            The User ID for the enrollment ticket.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse.TicketId">
            <summary>
            The ticket ID used to identify the enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CreateGuardianEnrollmentTicketResponse.TicketUrl">
            <summary>
            The URL you can use to start enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.CredentialType">
            <summary>
            The type of the credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.Name">
            <summary>
            The name of the credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.Kid">
            <summary>
            The kid of the credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.Id">
            <summary>
            The id of the credential
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.Algorithm">
            <summary>
            Algorithm which will be used with the credential. Supported algorithms: RS256,RS384,PS256
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.CreatedAt">
            <summary>
            The DateTime when the credential was created
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.UpdatedAt">
            <summary>
            The DateTime when the credential was updated
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Credential.ExpiresAt">
            <summary>
            The DateTime when the credential expires
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomain">
            <summary>
            Represents a Custom Domain
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainBase">
            <summary>
            Base class for custom domain responses.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.CustomDomainId">
            <summary>
            The id of the custom domain.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.Domain">
            <summary>
            The custom domain.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.OriginDomainName">
            <summary>
            The intermediate address.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.Primary">
            <summary>
            true if the domain was marked as "primary", false otherwise.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.Status">
            <summary>
            The custom domain configuration status.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.Type">
            <summary>
            The custom domain provisioning type.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainBase.Verification">
            <summary>
            The custom domain verification methods.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainCertificateProvisioning">
            <summary>
            The custom domain provisioning type.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.CustomDomainCertificateProvisioning.Auth0ManagedCertificate">
            <summary>
            Using Auth0-managed Certificates.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.CustomDomainCertificateProvisioning.SelfManagedCertificate">
            <summary>
            Using self-managed certificates.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainCreateRequest">
            <summary>
            Represents a request to create a new custom domain.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainCreateRequest.Domain">
            <summary>
            The custom domain.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainCreateRequest.Type">
            <summary>
            The custom domain provisioning type.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainCreateRequest.VerificationMethod">
            <summary>
            The custom domain verification method.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainStatus">
            <summary>
            The custom domain configuration status.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.CustomDomainStatus.Disabled">
            <summary>
            Domain is disabled.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.CustomDomainStatus.Pending">
            <summary>
            Domain is pending.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.CustomDomainStatus.PendingVerification">
            <summary>
            Domain is pending verification.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.CustomDomainStatus.Ready">
            <summary>
            Domain is ready
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainVerification">
            <summary>
            The custom domain verification methods.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainVerification.Methods">
            <summary>
            The custom domain verification methods.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainVerificationMethod">
            <summary>
            The custom domain verification method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainVerificationMethod.Name">
            <summary>
            Domain verification method. ("cname" or "txt")
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainVerificationMethod.Record">
            <summary>
            Value used to verify the domain.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.CustomDomainVerificationMethod.Domain">
            <summary>
            The name of the txt record for verification.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.CustomDomainVerificationResponse">
            <summary>
            Response when requesting a custom domain verification
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DailyStatistics">
            <summary>
            The number of signups and logins for a specific day.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DailyStatistics.Date">
            <summary>
            The date to which the stats belong.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DailyStatistics.Logins">
            <summary>
            The amount of logins on the date.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DailyStatistics.SignUps">
            <summary>
            The amount of signups on the date.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DeviceCredential">
            <summary>
            Represents device credentials returned from the API.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredential.Id">
            <summary>
            Gets or sets the device's identifier.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DeviceCredentialBase">
            <summary>
            Base class for device credentials.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.DeviceName">
            <summary>
            Gets or sets the device's name.
            </summary>
            <remarks>
            This is a value that must be easily recognized by the device's owner.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.DeviceId">
            <summary>
            Gets or sets a unique identifier for the device.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.Type">
            <summary>
            Gets or sets the type of the credential.
            </summary>
            <remarks>
            This should be either "public_key" or "refresh_token".
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialBase.ClientId">
            <summary>
            Gets or sets the ID of the client for which the credential will be created.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.DeviceCredentialCreateRequest">
            <summary>
            Represents a request to create device credentials.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.DeviceCredentialCreateRequest.Value">
            <summary>
            Gets or sets the value of the credentia
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProvider">
            <summary>
            Represents configuration for the email provider.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderBase">
            <summary>
            Base class for email provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.DefaultFromAddress">
            <summary>
            Gets or sets the default from address
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.Name">
            <summary>
            Gets or sets the name of the provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.IsEnabled">
            <summary>
            Gets or sets whether using your own email provider is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.Credentials">
            <summary>
            Gets or sets the name of the email provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderBase.Settings">
            <summary>
            Gets or sets the settings of the email provider.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderConfigureRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderCredentials">
            <summary>
            Credentials for an email provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.ApiUser">
            <summary>
            Gets or sets the API User.
            </summary>
            <remarks>
            Applicable only to the SendGrid provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.ApiKey">
            <summary>
            Gets or sets the API Key.
            </summary>
            <remarks>
            Applicable only to the SendGrid  and Mandrill providers.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.AccessKeyId">
            <summary>
            Gets or sets the Access Key ID.
            </summary>
            <remarks>
            Applicable only to the AWS provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SecretAccessKey">
            <summary>
            Gets or sets the Secret Access Key.
            </summary>
            <remarks>
            Applicable only to the AWS provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.Region">
            <summary>
            Gets or sets the default AWS region.
            </summary>
            <remarks>
            Applicable only to the AWS provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpHost">
            <summary>
            Gets or sets the host name or IP address of the SMTP server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpPort">
            <summary>
            Gets or sets the port used by the SMTP server
            </summary>
            <remarks>
            Common ports include 25, 465, and 587. Please avoid using port 25 if you can, since many providers have limitations on this port.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpUsername">
            <summary>
            Gets or sets the username for the SMTP server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailProviderCredentials.SmtpPassword">
            <summary>
            Gets or sets the password for the SMTP server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailProviderUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailTemplate">
            <summary>
            Response returned from email template requests
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplate.Enabled">
            <summary>
            Whether or not the template is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplate.Syntax">
            <summary>
            The syntax of the template body.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplate.Template">
            <summary>
            The template name.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailTemplateBase">
            <summary>
            Base class for email templates
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateBase.Body">
            <summary>
            The body of the template.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateBase.From">
            <summary>
            The sender of the email.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateBase.ResultUrl">
            <summary>
            The URL to redirect the user to after a successful action.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateBase.Subject">
            <summary>
            The subject of the email.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateBase.UrlLifetimeInSeconds">
            <summary>
            The lifetime in seconds that the link within the email will be valid for.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailTemplateCreateRequest">
            <summary>
            Request for creating an email template
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateCreateRequest.Enabled">
            <summary>
            Whether or not the template is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateCreateRequest.Syntax">
            <summary>
            The syntax of the template body.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateCreateRequest.Template">
            <summary>
            The template name.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailTemplateName">
            <summary>
            The names of the different email templates which you can manage.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.VerifyEmail">
            <summary>
            This email will be sent whenever a user signs up or logs in for the first time.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.ResetEmail">
            <summary>
            
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.WelcomeEmail">
            <summary>
            This email will be sent once the user verifies their email address. 
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.BlockedAccount">
            <summary>
            This email will be sent whenever a user is blocked due to suspicious login attempts. 
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.StolenCredentials">
            <summary>
            This email will be sent whenever Auth0 detects that the user is trying to access the application using a password that has been leaked by a third party. 
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.EnrollmentEmail">
            <summary>
            This email will be sent when an admin sends a guardian enrollment email. 
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.ChangePassword">
            <summary>
            This email will be sent whenever a user requests a password change.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.PasswordReset">
            <summary>
            This email will be sent whenever a user requests a password reset.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateName.MfaOobCode">
            <summary>
            This email will provide the MFA verification code to a user that is using a MFA email verifier. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailTemplatePatchRequest">
            <summary>
            Request for patching an email template
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplatePatchRequest.Enabled">
            <summary>
            Whether or not the template is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplatePatchRequest.Syntax">
            <summary>
            The syntax of the template body.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplatePatchRequest.Template">
            <summary>
            The template name.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.EmailTemplateSyntax.Liquid">
            <summary>
            Liquid syntax is used for the template
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailTemplateUpdateRequest">
            <summary>
            Request for updating an email template
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateUpdateRequest.Enabled">
            <summary>
            Whether or not the template is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateUpdateRequest.Syntax">
            <summary>
            The syntax of the template body.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailTemplateUpdateRequest.Template">
            <summary>
            The template name.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailVerificationIdentity">
            <summary>
            Represents the identity object that can be sent on requests to create an email verification ticket or job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationIdentity.Provider">
            <summary>
            Identity provider name of the identity (e.g. google-oauth).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationIdentity.UserId">
            <summary>
            UserId of the identity to be verified.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EmailVerificationTicketRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.ResultUrl">
            <summary>
            The user will be redirected to this endpoint once the ticket is used.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.Ttl">
            <summary>
            The ticket's lifetime in seconds starting from the moment of creation. 
            After expiration the ticket can not be used to verify the users's email. 
            If not specified or if you send 0 the Auth0 default lifetime will be applied
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.UserId">
            <summary>
            The user ID for which the ticket is to be created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.Identity">
            <summary>
            Sets the identity. Needed to verify primary identities when using social, enterprise, or passwordless connections.
            It is also required to verify secondary identities.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.OrganizationId">
            <summary>
            The organization ID.
            </summary>
            <summary>
            If provided the organization_id and organization_name will be included in the redirection URL querystring
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EmailVerificationTicketRequest.ClientId">
            <summary>
            ID of the client.
            If provided for tenants using the New Universal Login experience, 
            the user will be prompted to redirect to the default login route of the corresponding application once the ticket is used.
            See <see href="https://auth0.com/docs/universal-login/configure-default-login-routes">Configuring Default Login Routes</see> for more details.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EncryptionKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EncryptionKey.Certificate">
            <summary>
            Encryption certificate
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EncryptionKey.PublicKey">
            <summary>
            Encryption public key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EncryptionKey.Subject">
            <summary>
            The subject of the Enryption key
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EnrollmentAuthMethod">
            <summary>
            Method of authentication for a Guardian Enrollment.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EnrollmentsResponse">
            <summary>
            Represents a Guardian Enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.Id">
            <summary>
            Enrollment generated id.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.Status">
            <summary>
            Enrollment status.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.Type">
            <summary>
            Enrollment type.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.Name">
            <summary>
            Enrollment name (usually phone number).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.Identifier">
            <summary>
            Device identifier (usually phone identifier) of this enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.PhoneNumber">
            <summary>
            Phone number for this enrollment. 
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.AuthMethod">
            <summary>
            Authentication method for this enrollment. Can be `authenticator`, `guardian`, `sms`, `webauthn-roaming` or `webauthn-platform`.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.EnrolledAt">
            <summary>
            Start date and time of this enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.EnrollmentsResponse.LastAuth">
            <summary>
            Last authentication date and time of this enrollment.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.EnrollmentStatus">
            <summary>
            Status of a Guardian Enrollment.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GenerateRecoveryCodeResponse">
            <summary>
            Represents a Generate Recovery Code response.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GenerateRecoveryCodeResponse.RecoveryCode">
            <summary>
            New recovery code.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetClientGrantsRequest">
            <summary>
            Specifies criteria to use when querying all client grants.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientGrantsRequest.Audience">
            <summary>
             URL Encoded audience of a client grant to filter.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientGrantsRequest.ClientId">
            <summary>
             The Id of a client to filter by. 
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientGrantsRequest.AllowAnyOrganization">
            <summary>
            If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetClientsRequest">
            <summary>
            Specifies criteria to use when querying all clients.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientsRequest.AppType">
            <summary>
            List of application types used to filter the returned clients.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientsRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.GetClientsRequest.IncludeFields"/>) from the result, empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientsRequest.IncludeFields">
            <summary>
            Specifies whether the fields specified in <see cref="P:Auth0.ManagementApi.Models.GetClientsRequest.Fields"/> should be included or excluded in the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientsRequest.IsGlobal">
            <summary>
            Filter on the global client parameter.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetClientsRequest.IsFirstParty">
            <summary>
            Filter on whether or not a client is a first party client.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetConnectionsRequest">
            <summary>
            Specifies criteria to use when querying all connections.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetConnectionsRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.GetConnectionsRequest.IncludeFields"/>) from the result, empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetConnectionsRequest.IncludeFields">
            <summary>
            Specifies whether the fields specified in <see cref="P:Auth0.ManagementApi.Models.GetConnectionsRequest.Fields"/> should be included or excluded in the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetConnectionsRequest.Name">
            <summary>
            The name of the connection to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetConnectionsRequest.Strategy">
            <summary>
            Only retrieve connections with these strategies.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetDeviceCredentialsRequest">
            <summary>
            Specifies criteria to use when querying all device credentials.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetDeviceCredentialsRequest.Fields">
            <summary>
            Comma-separated list of fields to include or exclude (based on value provided for include_fields) in the result. Leave empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetDeviceCredentialsRequest.IncludeFields">
            <summary>
            Whether specified fields are to be included (true) or excluded (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetDeviceCredentialsRequest.UserId">
            <summary>
            user_id of the devices to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetDeviceCredentialsRequest.ClientId">
            <summary>
            client_id of the devices to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetDeviceCredentialsRequest.Type">
            <summary>
            Type of credentials to retrieve. Must be `public_key`, `refresh_token` or `rotating_refresh_token`. The property will default to `refresh_token` when paging is requested
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetHooksRequest.Enabled">
            <summary>
            If provided retrieves hooks that match the value, otherwise all hooks are retrieved.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetHooksRequest.Fields">
            <summary>
            A Comma-separated list of fields to include in the result. Leave empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetHooksRequest.TriggerId">
            <summary>
            Gets or sets the triggerId of the hook. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetLogsRequest">
            <summary>
            Specifies criteria to use when querying all logs.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetLogsRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.GetLogsRequest.IncludeFields"/>) from the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetLogsRequest.From">
            <summary>
            Log Event Id to start retrieving logs. You can limit the amount of logs using the <see cref="P:Auth0.ManagementApi.Models.GetLogsRequest.Take"/> parameter.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetLogsRequest.IncludeFields">
            <summary>
            Specifies whether the fields specified in <see cref="P:Auth0.ManagementApi.Models.GetLogsRequest.Fields"/> should be included or excluded in the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetLogsRequest.Query">
            <summary>
            Query in Lucene query string syntax.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetLogsRequest.Sort">
            <summary>
            The field to use for sorting. Use field:order where order is 1 for ascending and -1 for descending.
            </summary>
            <remarks>e.g. date:-1</remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetLogsRequest.Take">
            <summary>
            The total amount of entries to retrieve when using the <see cref="P:Auth0.ManagementApi.Models.GetLogsRequest.From"/> parameter. Default: 50. Max value: 100
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetRolesRequest">
            <summary>
            Specifies criteria to use when querying all roles.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetRolesRequest.NameFilter">
            <summary>
            A string to filter by, empty to retrieve all roles.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetRulesRequest">
            <summary>
            Specifies criteria to use when querying all rules.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetRulesRequest.Enabled">
            <summary>
            If provided retrieves rules that match the value, otherwise all rules are retrieved.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetRulesRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.GetRulesRequest.IncludeFields"/>) from the result, empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetRulesRequest.IncludeFields">
            <summary>
            True if the fields specified are to be included in the result, false otherwise.
            </summary>
            <remarks>
            Defaults to true.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetRulesRequest.Stage">
            <summary>
            Retrieves rules that match the execution stage.
            </summary>
            <remarks>
            Defaults to login_success.
            </remarks>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetUserLogsRequest">
            <summary>
            Specifies criteria to use when querying logs for a user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUserLogsRequest.Sort">
            <summary>
            The field to use for sorting.
            </summary>
            <remarks>
            Use field:order where order is 1 for ascending and -1 for descending. For example date:-1
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUserLogsRequest.UserId">
            <summary>
            The user id of the user whose logs should be retrieved.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.GetUsersRequest">
            <summary>
            Specifies criteria to use when querying all users.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUsersRequest.Connection">
            <summary>
            Connection filter. Only applies when <see cref="P:Auth0.ManagementApi.Models.GetUsersRequest.SearchEngine"/> is set to v1. 
            To filter by connection with <see cref="P:Auth0.ManagementApi.Models.GetUsersRequest.SearchEngine"/> set to v2 or v3, set <see cref="P:Auth0.ManagementApi.Models.GetUsersRequest.Query"/> to identities.connection:"connection_name" instead.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUsersRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.GetUsersRequest.IncludeFields"/>) from the result, empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUsersRequest.IncludeFields">
            <summary>
            Specifies whether the fields specified in <see cref="P:Auth0.ManagementApi.Models.GetUsersRequest.Fields"/> should be included or excluded in the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUsersRequest.Query">
            <summary>
            Query in Lucene query string syntax.
            </summary>
            <remarks>
            Not all metadata fields are searchable when using search engine v2. When using search engine v3, some query types cannot be used on metadata fields.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUsersRequest.SearchEngine">
            <summary>
            The version of the search engine to use.
            </summary>
            <remarks>
            Will default to v2 if no value is passed. Default will change to v3 on 2018/11/13.
            For more info <a href="https://auth0.com/docs/users/search/v3#migrate-from-search-engine-v2-to-v3">see the online documentation</a>.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GetUsersRequest.Sort">
            <summary>
            The field to use for sorting. 1 == ascending and -1 == descending.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Grants.GetGrantsRequest.UserId">
            <summary>
            Id of the user of the grants to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Grants.GetGrantsRequest.ClientId">
            <summary>
            Id of the client of the grants to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Grants.GetGrantsRequest.Audience">
            <summary>
            Audience of the grants to retrieve.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Id">
            <summary>
            Enrollment generated ID.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Status">
            <summary>
            Status of the enrollment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Name">
            <summary>
            Name of the device which was enrolled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.Identifier">
            <summary>
            Device identifier (usually phone identifier).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.PhoneNumber">
            <summary>
            Phone number.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.EnrolledAt">
            <summary>
            Date and time enrollment occurred.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianEnrollment.LastAuth">
            <summary>
            Date and time when device was last used for authentication.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianFactor.Enabled">
            <summary>
            States if this factor is enabled.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianFactor.Name">
            <summary>
            The factor name.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianFactor.IsTrialExpired">
            <summary>
            For factors with trial limits (e.g. SMS) states if those limits have been exceeded.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianPhoneMessageTypes.MessageTypes">
            <summary>
            The list of phone factors to enable on the tenant. Can include `sms` and `voice`.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates.EnrollmentMessage">
            <summary>
            Message sent to the user when they are invited to enroll with a phone number.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianSmsEnrollmentTemplates.VerificationMessage">
            <summary>
            Message sent to the user when they are prompted to verify their account.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.From">
            <summary>
            Number from which the message is sent.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.MessagingServiceSid">
            <summary>
            Copilot SID.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.AuthToken">
            <summary>
            Twilio Authentication token.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.GuardianTwilioConfigurationBase.Sid">
            <summary>
            Twilio SID.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Hook">
            <summary>
            Represents a hook. A hook is arbitrary JavaScript code that can be used to extend Auth0's default behavior when executed in selected extension points.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Hook.Id">
            <summary>
            Gets or sets the identifier for the hook.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Hook.TriggerId">
            <summary>
            Gets or sets the triggerId of the hook. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.HookBase">
            <summary>
            Base class for hooks.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.HookBase.Name">
            <summary>
            Gets or sets the name of the hook.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.HookBase.Enabled">
            <summary>
            Gets or sets whether the hook is enabled.
            </summary>
            <remarks>
            True if the connection is enabled, false otherwise.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.HookBase.Script">
            <summary>
            Gets or sets the code to be executed when the hook runs.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.HookBase.Dependencies">
            <summary>
            Gets or sets the dependencies of this hook used by webtask server.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.HookCreateRequest.TriggerId">
            <summary>
            Gets or sets the triggerId of the hook. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Identity">
            <summary>
            Describes a 3rd party account for a given <see cref="T:Auth0.ManagementApi.Models.User" />.
            </summary>
            <remarks>
            A single <see cref="T:Auth0.ManagementApi.Models.User" /> may be linked to multiple 3rd party accounts. This object defines the details of one
            of those accounts.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.AccessToken">
            <summary>
            The token that can be used to call the <see cref="P:Auth0.ManagementApi.Models.Identity.Provider" />'s API to get more information about the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.AccessTokenSecret">
            <summary>
            The token secret that can be used to call the <see cref="P:Auth0.ManagementApi.Models.Identity.Provider" />'s API to get more information about the user.
            </summary>
            <remarks>
            This is available for Twitter connections.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.Connection">
            <summary>
            The name of the connection for the identity.
            </summary>
            <remarks>
            Sometimes, this is the same as the connection, but not always.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.ExpiresIn">
            <summary>
            Gets or sets the expiry time in seconds.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.IsSocial">
            <summary>
            Indicates whether this is a social identity.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.ProfileData">
            <summary>
            Contains additional profile information for linked identities.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.Provider">
            <summary>
            The type of identity provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.RefreshToken">
            <summary>
            The refresh token that can be used to call the <see cref="P:Auth0.ManagementApi.Models.Identity.Provider" />'s API to renew access tokens.
            </summary>
            <remarks>
            The refresh token is only available for certain providers.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Identity.UserId">
            <summary>
            The user's identifier.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Job">
            <summary>
            Represents a background job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Status">
            <summary>
            Run status of this job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Type">
            <summary>
            Type of job this is.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Id">
            <summary>
            Unique identifier of this job that can be used to retrieve status later.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Connection">
            <summary>
            Connection name to which users will be inserted.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.ConnectionId">
            <summary>
            Connection identifier of the connection to which users will be inserted.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.CreatedAt">
            <summary>
            Date and time the job was created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Summary">
            <summary>
            Summary of how entries were processed by this job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Format">
            <summary>
            File format for this job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.Location">
            <summary>
            Uri location of downloadable results for this job.
            </summary>
            <remarks>
            Used by user export jobs.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.PercentageDone">
            <summary>
            How much of this job has been completed as a percentage.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.TimeLeftSeconds">
            <summary>
            Amount of expected time left to complete this job in seconds.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.TimeLeft">
            <summary>
            Amount of expected time left to complete this job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Job.ExternalId">
            <summary>
            Customer-defined id.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.JobSummary">
            <summary>
            Represents the results summary of a job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JobSummary.Failed">
            <summary>
            Number of entries that failed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JobSummary.Updated">
            <summary>
            Number of entries that were successfully updated.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JobSummary.Inserted">
            <summary>
            Number of entries that were successfully inserted.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JobSummary.Total">
            <summary>
            Number of total entries for this job.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.JwtConfiguration">
            <summary>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.IsSecretEncoded">
            <summary>
            True if the client secret is base64 encoded, false otherwise. Defaults to true.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.LifetimeInSeconds">
            <summary>
            The amount of time (in seconds) that the token will be valid after being issued. (affects 'exp' claim)
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.Scopes">
            <summary>
            The scopes for the JWT.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.JwtConfiguration.SigningAlgorithm">
            <summary>
            The algorithm used to sign the JsonWebToken. Possible values are 'HS256' or 'RS256'.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Keys.Key">
            <summary>
            An Application Signing Key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Kid">
            <summary>
            The key id of the signing key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Cert">
            <summary>
            The public certificate of the signing key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Pkcs7">
            <summary>
            The public certificate of the signing key in pkcs7 format
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Current">
            <summary>
            True if the key is the the current key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Next">
            <summary>
            True if the key is the the next key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Previous">
            <summary>
            True if the key is the the previous key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.CurrentSince">
            <summary>
            The date and time when the key became the current key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.CurrentUntil">
            <summary>
            The date and time when the current key was rotated
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Fingerprint">
            <summary>
            The cert fingerprint
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Thumbprint">
            <summary>
            The cert thumbprint
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.Revoked">
            <summary>
            True if the key is revoked
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.Key.RevokedAt">
            <summary>
            The date and time when the key was revoked
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.RevokeSigningKeyResponse.Kid">
            <summary>
            The id of the revoked signing key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.RevokeSigningKeyResponse.Cert">
            <summary>
            The public certificate of the revoked signing key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.RotateSigningKeyResponse.Kid">
            <summary>
            The id of the next signing key
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Keys.RotateSigningKeyResponse.Cert">
            <summary>
            The public certificate of the next signing key
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogEntry">
            <summary>
            Information about a log entry
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ClientId">
            <summary>
            The identifier of the client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ClientName">
            <summary>
            The name of the client
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Connection">
            <summary>
            The name of the connection
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ConnectionId">
            <summary>
            The id of the connection
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Date">
            <summary>
            The date when the event was created
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Description">
            <summary>
            A description for the event
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Details">
            <summary>
            Additional (and very useful) details about the event.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.HostName">
            <summary>
            The hostname for the request.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Id">
            <summary>
            The unique identifier for the log entry
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ImpersonatorUserId">
            <summary>
            The User ID of the user for an impersonation request.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.ImpersonatorUserName">
            <summary>
            The Username of the user for an impersonation request.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.IpAddress">
            <summary>
            The IP address of the log event source
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.IsMobile">
            <summary>
            Whether the event was from a mobile device.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.LocationInfo">
            <summary>
            Additional details about the event's ip trace location. If the ip matches either as private or localhost it returns
            an empty object
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Strategy">
            <summary>
            The strategy used
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.StrategyType">
            <summary>
            The strategy type
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.Type">
            <summary>
            The log event type
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.UserAgent">
            <summary>
            The user's browser user-agent
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.UserId">
            <summary>
            The user's unique identifier
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogEntry.UserName">
            <summary>
            The user's name
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogoutInitiatorModes.All">
            <summary>
            All initiators are enabled.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogoutInitiatorModes.Custom">
            <summary>
            Specific initiators are enabled.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogoutInitiators.RpLogout">
            <summary>
            Request was initiated by a relying party (RP).
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogoutInitiators.IdpLogout">
            <summary>
            Request was initiated by an external identity provider (IdP).
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogoutInitiators.PasswordChanged">
            <summary>
            Request was initiated by a password change.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogoutInitiators.SessionExpired">
            <summary>
            Request was initiated when a session expires.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogStream">
            <summary>
            Information about a log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStream.Id">
            <summary>
            The identifier of the log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStream.Status">
            <summary>
            The status of the log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStreamBase.Name">
            <summary>
            The name of the log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStreamBase.Type">
            <summary>
            The type of the log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStreamBase.Sink">
            <summary>
            Information about the log stream sink
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogStreamCreateRequest">
            <summary>
            A request for creating log streams
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogStreamStatus">
            <summary>
            The possible statuses of the log stream
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogStreamStatus.Active">
            <summary>
            The log stream is active
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogStreamStatus.Paused">
            <summary>
            The log stream is paused
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogStreamStatus.Suspended">
            <summary>
            The log stream is suspended
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogStreamType">
            <summary>
            The possible types of log stream
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogStreamUpdateRequest">
            <summary>
            Information required to update a log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStreamUpdateRequest.Name">
            <summary>
            The name of the log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStreamUpdateRequest.Status">
            <summary>
            The new status of the log stream
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.LogStreamUpdateRequest.Sink">
            <summary>
            The new collection of properties describing the log stream sink
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.LogStreamUpdateStatus">
            <summary>
            The possible statuses to update a log strem with
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogStreamUpdateStatus.Active">
            <summary>
            Activate the log stream
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.LogStreamUpdateStatus.Paused">
            <summary>
            Pause the log stream
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Mobile">
            <summary>
            Represents configuration of mobile apps for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.Android">
            <summary>
            Configuration related to Android native apps.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.Ios">
            <summary>
            Configuration related to iOS native apps
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Mobile.MobileAndroid">
            <summary>
            Represents Android configuration for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileAndroid.AppPackageName">
            <summary>
            The package name which uniquely identifies the Android app.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileAndroid.KeystoreHash">
            <summary>
            Gets or sets the keystore hash for an Android app.
            </summary>
            <value>The keystore hash.</value>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Mobile.MobileIos">
            <summary>
            Represents iOS configuration for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileIos.AppBundleIdentifier">
            <summary>
            The Bundle identifier for the iOS app.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Mobile.MobileIos.TeamId">
            <summary>
            The iOS Developer Account Team identifier.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OidcLogoutConfig.BackchannelLogoutUrls">
            <summary>
            The supported backchannel logout URLs for the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OidcLogoutConfig.BackchannelLogoutInitiators">
            <summary>
            The OIDC Back-Channel Logout Initiators for the client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationAddMemberRolesRequest.Roles">
            <summary>
            List of role IDs to associated with the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationAddMembersRequest.Members">
            <summary>
            List of user IDs to add to the organization as members.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationBase.Name">
            <summary>
            The name of the organization
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationBase.DisplayName">
            <summary>
            The display name of the organization
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationBase.Branding">
            <summary>
            Organization specific branding settings
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationBase.Metadata">
            <summary>
            Organization specific metadata
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationBranding.LogoUrl">
            <summary>
            URL for the logo. Must use HTTPS.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationBranding.Colors">
            <summary>
            Custom color settings.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationClientGrant.Id">
            <summary>
            Gets or sets the identifier for a Client Grant.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationClientGrant.Audience">
            <summary>
            Gets or sets the audience
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationClientGrant.ClientId">
            <summary>
            Gets or sets the identifier of the <see cref="T:Auth0.ManagementApi.Models.Client"/>
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationClientGrant.Scope">
            <summary>
            Gets or sets the list of scopes
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnection.ConnectionId">
            <summary>
            ID of the connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnection.AssignMembershipOnLogin">
            <summary>
            Whether or not users that login will automatically be granted membership to the organization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnection.ShowAsButton">
            <summary>
            Determines whether a connection should be displayed on this organization’s login prompt.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnection.Connection">
            <summary>
            Information on the enabled connection
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest.ConnectionId">
            <summary>
            ID of the connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest.AssignMembershipOnLogin">
            <summary>
            Whether or not users that login will automatically be granted membership to the organization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionCreateRequest.ShowAsButton">
            <summary>
            Determines whether a connection should be displayed on this organization’s login prompt.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.OrganizationConnectionInfo">
            <summary>
            Information on the enabled connection for an Organization
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionInfo.Name">
            <summary>
            The name of the enabled connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionInfo.Strategy">
            <summary>
            The strategy of the enabled connection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionUpdateRequest.AssignMembershipOnLogin">
            <summary>
            Whether or not users that login will automatically be granted membership to the organization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationConnectionUpdateRequest.ShowAsButton">
            <summary>
            Determines whether a connection should be displayed on this organization’s login prompt.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateClientGrantRequest.GrantId">
            <summary>
            A Client Grant ID to add to the organization. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest">
            <summary>
            Requests structure for creating a new organization invitation.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.Inviter">
            <summary>
            Information about the person that is creating the invitation
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.Invitee">
            <summary>
            Information about the person being invited
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.ConnectionId">
            <summary>
            The id of the connection to force invitee to authenticate with.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.ClientId">
            <summary>
            Auth0 client ID. Used to resolve the application's login initiation endpoint.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.AppMetadata">
            <summary>
            Contains app meta data. The user has read/write access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.UserMetadata">
            <summary>
            Contains user meta data. The user has read/write access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.TimeToLive">
            <summary>
            Number of seconds for which the invitation is valid before expiration.
            </summary>
            <remarks>
            If unspecified or set to 0, this value defaults to 604800 seconds (7 days). Max value: 2592000 seconds (30 days).
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.SendInvitationEmail">
            <summary>
            Whether the user will receive an invitation email (true) or no email (false), true by default
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateInvitationRequest.Roles">
            <summary>
            List of role IDs to associated with the user.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.OrganizationCreateRequest">
            <summary>
            Requests structure for creating a new organization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationCreateRequest.EnabledConnections">
            <summary>
            Support enable connections in organization 
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationDeleteMemberRolesRequest.Roles">
            <summary>
            List of role IDs to remove from the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationDeleteMembersRequest.Members">
            <summary>
            List of user IDs to remove from the organization as members.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest.IncludeFields"/>) from the result, empty to retrieve all fields.
            </summary>
            <remarks>
            If fields is left blank, all fields (except roles) are returned.
            
            Member roles are not sent by default.
            Use fields=roles to retrieve the roles assigned to each listed member.
            To use this parameter, you must include the read:organization_member_roles scope in the token.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest.IncludeFields">
            <summary>
            Specifies whether the fields specified in <see cref="P:Auth0.ManagementApi.Models.OrganizationGetAllMembersRequest.Fields"/> should be included or excluded in the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetAllInvitationsRequest.Sort">
            <summary>
            Field to sort by.
            </summary>
            <remarks>
            Use field:order where order is 1 for ascending and -1 for descending Defaults to created_at:-1.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetClientGrantsRequest.Audience">
            <summary>
             URL Encoded audience of a client grant to filter.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetClientGrantsRequest.ClientId">
            <summary>
             The Id of a client to filter by. 
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetInvitationRequest.Fields">
            <summary>
            A comma separated list of fields to include or exclude (depending on <see cref="P:Auth0.ManagementApi.Models.OrganizationGetInvitationRequest.IncludeFields"/>) from the result, empty to retrieve all fields.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationGetInvitationRequest.IncludeFields">
            <summary>
            Specifies whether the fields specified in <see cref="P:Auth0.ManagementApi.Models.OrganizationGetInvitationRequest.Fields"/> should be included or excluded in the result.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.Id">
            <summary>
            The ID of the invitation
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.OrganizationId">
            <summary>
            The ID of the organization for which the user should be invited
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.Inviter">
            <summary>
            Information about the person that is creating the invitation
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.Invitee">
            <summary>
            Information about the person being invited
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.InvitationUrl">
            <summary>
            The invitation URL to be send to the invitee.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.CreatedAt">
            <summary>
            The creation time of the invitation.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.ExpiresAt">
            <summary>
            The expiration time of the invitation.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.ConnectionId">
            <summary>
            The ID of the connection to force invitee to authenticate with.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.ClientId">
            <summary>
            Auth0 client ID. Used to resolve the application's login initiation endpoint.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.AppMetadata">
            <summary>
            Contains app meta data. The user has read/write access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.UserMetadata">
            <summary>
            Contains user meta data. The user has read/write access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.TicketId">
            <summary>
            The ID of the invitation ticket.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitation.Roles">
            <summary>
            List of role IDs to associated with the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitationInvitee.Email">
            <summary>
            The email for the user that is to be invited.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationInvitationInviter.Name">
            <summary>
            The name of the user that is creating the invitation.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationMember.UserId">
            <summary>
            ID of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationMember.Picture">
            <summary>
            URL to a picture for the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationMember.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationMember.Email">
            <summary>
            Email address of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationMember.Roles">
            <summary>
            The roles of the user
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.OrganizationRequireBehavior">
            <summary>
            Defines how to proceed during an authentication transaction when organization usage is required.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.OrganizationRequireBehavior.NoPrompt">
            <summary>
            Do not prompt for an organization
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.OrganizationRequireBehavior.PreLoginPrompt">
            <summary>
            Prompt for an organization before login
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.OrganizationRequireBehavior.PostLoginPrompt">
            <summary>
            Prompt for an organization after login
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.OrganizationUpdateRequest">
            <summary>
            Requests structure for updating an organization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationUpdateRequest.DisplayName">
            <summary>
            The display name of the organization
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationUpdateRequest.Name">
            <summary>
            The name of this organization
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationUpdateRequest.Branding">
            <summary>
            Organization specific branding settings
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.OrganizationUpdateRequest.Metadata">
            <summary>
            Organization specific metadata
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.OrganizationUsage">
            <summary>
            Organization usage for a client
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.OrganizationUsage.Deny">
            <summary>
            Client denies organization usage
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.OrganizationUsage.Allow">
            <summary>
            Client allows organization usage
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.OrganizationUsage.Require">
            <summary>
            Client requires organization usage
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.PasswordChangeTicketRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.ResultUrl">
            <summary>
            The user will be redirected to this endpoint once the ticket is used.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.UserId">
            <summary>
            The user ID for which the ticket is to be created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.ConnectionId">
            <summary>
            The connection that provides the identity for which the password is to be changed. If sending this parameter, the <see cref="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.Email"/> is also required and the <see cref="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.UserId"/> is invalid.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.Email">
            <summary>
            The user's email.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.Ttl">
            <summary>
            The ticket's lifetime in seconds starting from the moment of creation. 
            After expiration the ticket can not be used to change the users's password. 
            If not specified or if you send 0 the Auth0 default lifetime will be applied
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.MarkEmailAsVerified">
            <summary>
            Whether the email_verified attribute will be set once the password is changed.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.IncludeEmailInRedirect">
            <summary>
            Whether the reset_email will include the email as part of the returnUrl.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.ClientId">
            <summary>
            ID of the client.
            If provided for tenants using the New Universal Login experience, 
            the user will be prompted to redirect to the default login route of the corresponding application once the ticket is used.
            See <see href="https://auth0.com/docs/universal-login/configure-default-login-routes">Configuring Default Login Routes</see> for more details.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PasswordChangeTicketRequest.OrganizationId">
            <summary>
            The organization ID.
            </summary>
            <summary>
            If provided the organization_id and organization_name will be included in the redirection URL querystring
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Permission">
            <summary>
            Represents a permission.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Permission.ResourceServerName">
            <summary>
            The name of the resource server.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Permission.Description">
            <summary>
            The description of the permission.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.PermissionIdentity">
            <summary>
            Represents the properties of a permission that give it its unique identity.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PermissionIdentity.Identifier">
            <summary>
            The resource server that the permission is attached to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PermissionIdentity.Name">
            <summary>
            The name of the permission.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.PermissionSource">
            <summary>
            Represents the source of a permission assignment
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PermissionSource.ID">
            <summary>
            Gets or sets the ID of the source of the permission. Empty for direct assignment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PermissionSource.Name">
            <summary>
            Gets or sets the name of the source of the permission. Empty for direct assignment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.PermissionSource.Type">
            <summary>
            Gets or sets the type of the permission source (direct assignment or role assignment)
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.PermissionSourceType">
            <summary>
            Types of permission sources
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.PermissionSourceType.Direct">
            <summary>
            Permission assigned directly to user
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.PermissionSourceType.Role">
            <summary>
            Permission assigned via role
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Prompts.Prompt">
            <summary>
            Represents Prompt Settings.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Prompts.Prompt.UniversalLoginExperience">
            <summary>
            Which login experience to use. Can be new or classic
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Prompts.Prompt.IdentifierFirst">
            <summary>
            Whether identifier first is enabled or not.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Prompts.Prompt.WebAuthnPlatformFirstFactor">
            <summary>
            Use WebAuthn with Device Biometrics as the first authentication factor
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Prompts.PromptUpdateRequest">
            <summary>
            Request configuration for updating prompt settings.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RefreshToken">
            <summary>
            Represents configuration of refresh tokens for a client.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.RotationType">
            <summary>
            Refresh token rotation type
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.ExpirationType">
            <summary>
            Refresh token expiration type
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.Leeway">
            <summary>
            Period in seconds where the previous refresh token can be exchanged without triggering breach detection
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.TokenLifetime">
            <summary>
            Period (in seconds) for which refresh tokens will remain valid
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.InfiniteTokenLifetime">
            <summary>
            Prevents tokens from having a set lifetime when true (takes precedence over token_lifetime values)
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.IdleTokenLifetime">
            <summary>
            Period (in seconds) for which refresh tokens will remain valid without use
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RefreshToken.InfiniteIdleTokenLifetime">
            <summary>
            Prevents tokens from expiring without use when true (takes precedence over idle_token_lifetime values)
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RefreshTokenExpirationType">
            <summary>
            The type of expiration for a <see cref="T:Auth0.ManagementApi.Models.RefreshToken"/>
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.RefreshTokenExpirationType.Expiring">
            <summary>
            Expiring
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.RefreshTokenExpirationType.NonExpiring">
            <summary>
            Non-Expiring
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RefreshTokenRotationType">
            <summary>
            The type of rotation for a <see cref="T:Auth0.ManagementApi.Models.RefreshToken"/>
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.RefreshTokenRotationType.Rotating">
            <summary>
            Rotating
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.RefreshTokenRotationType.NonRotating">
            <summary>
            Non-Rotating
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServer">
            <summary>
            Represents a resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServer.Id">
            <summary>
            The unique id of the resource server
            </summary>
            <remarks>
            Use this id to retrieve or delete a resource server
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServer.Identifier">
            <summary>
            The identifier of the resource server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerBase">
            <summary>
            Base class for resource server payloads
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.Name">
            <summary>
            The name of the resource server
            </summary>
            <remarks>
            Must contain at least one character. Does not allow '&lt;' or '&gt;'"
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.Scopes">
            <summary>
            The available scopes for the resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.SigningAlgorithm">
            <summary>
            The algorithm used to sign tokens
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.SigningSecret">
            <summary>
            The secret used to sign tokens when using symmetric algorithms
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.TokenLifetime">
            <summary>
            The amount of time (in seconds) that the token will be valid after being issued
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.TokenLifetimeForWeb">
            <summary>
            The amount of time (in seconds) that the token will be valid after being issued from browser based flows.
            Value cannot be larger than <see cref="P:Auth0.ManagementApi.Models.ResourceServerBase.TokenLifetime" />
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.AllowOfflineAccess">
            <summary>
            Allows issuance of refresh tokens for this entity
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.SkipConsentForVerifiableFirstPartyClients">
            <summary>
            Flag this entity as capable of skipping consent
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.VerificationLocation">
            <summary>
            A uri from which to retrieve JWKs for this resource server used for verifying the JWT sent to Auth0 for token introspection.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.TokenDialect">
            <summary>
            The dialect for the access token.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerBase.EnforcePolicies">
            <summary>
            Enables the enforcement of the authorization policies.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerCreateRequest">
            <summary>
            Request structure for creating a new resource server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerScope">
            <summary>
            Defines a scope for a resource server
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerScope.Value">
            <summary>
            The scope value
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ResourceServerScope.Description">
            <summary>
            A user-friendly description of the scope
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ResourceServerUpdateRequest">
            <summary>
            Request structure for updating a resource server
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Role">
            <summary>
            Class for roles.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Role.Id">
            <summary>
            Gets or sets the id of the role.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RoleBase">
            <summary>
            Base class for roles.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RoleBase.Name">
            <summary>
            Gets or sets the name of the role.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RoleBase.Description">
            <summary>
            The description of the role. Max character count is 140
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RoleCreateRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RoleUpdateRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rule">
            <summary>
            Represents a rule. A rule is arbitrary JavaScript code that can be used to extend Auth0's default behavior when authenticating a user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rule.Id">
            <summary>
            Gets or sets the identifier for the rule.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rule.Stage">
            <summary>
            Gets or sets the execution stage of the rule.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RuleBase">
            <summary>
            Base class for rules.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Name">
            <summary>
            Gets or sets the name of the rule.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Enabled">
            <summary>
            Gets or sets whether the rule is enabled.        
            </summary>
            <remarks>
            True if the connection is enabled, false otherwise.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Script">
            <summary>
            Gets or sets the code to be executed when the rule runs.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleBase.Order">
            <summary>
            Gets or sets the order of the rule in relation to other rules. A rule with a lower order than another rule executes first.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RuleCreateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RuleCreateRequest.Stage">
            <summary>
            Gets or sets the execution stage of the rule.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.LoginRequest">
            <summary>
            Represents details of the Login request from the app to Auth0, including QueryString and User Location.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.Body">
            <summary>
            The body of the POST request on login transactions used on oauth2-resource-owner or wstrust-usernamemixed protocols.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.Geography">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.IpAddress">
            <summary>
            The originating IP address of the user trying to log in.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.Query">
            <summary>
            The QueryString of the login transaction sent by the application.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequest.UserAgent">
            <summary>
            The user-agent of the client that is trying to log in.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.LoginRequestGeography">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.ContinentCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.CountryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.CountryName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.Latitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.Longitude">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.ShortCountryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestGeography.TimeZone">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.LoginRequestQuery">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Audience">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.ClientId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Device">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Protocol">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Prompt">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.RedirectUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.ResponseType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Scope">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.Sso">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.LoginRequestQuery.State">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.ClientId">
            <summary>
            The client id of the application the user is logging in to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.ClientName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.Connection">
            <summary>
            The name of the connection used to authenticate the user (e.g.: twitter or some-google-apps-domain)
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.ConnectionStrategy">
            <summary>
            The type of connection. 
            </summary>
            <remarks>
            For social connection connectionStrategy === connection. For enterprise connections, the strategy will be waad (Windows Azure AD), 
            ad (Active Directory/LDAP), auth0 (database connections), etc.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.JwtConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.Protocol">
            <summary>
            The authentication protocol. 
            </summary>
            <remarks>
            Possible values: oidc-basic-profile (most used, web based login), oidc-implicit-profile (used on mobile devices and single page apps), 
            oauth2-resource-owner (user/password login typically used on database connections), samlp (SAML protocol used on SaaS apps), 
            wsfed (WS-Federation used on Microsoft products like Office365), wstrust-usernamemixed (WS-trust user/password login used on CRM and Office365), 
            and delegation (when calling the Delegation endpoint).
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.LoginRequest">
            <summary>
            An object containing useful information of the request.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.SamlConfiguration">
            <summary>
            An object that controls the behavior of the SAML and WS-Fed endpoints. Useful for advanced claims mapping and token enrichment (only available for samlp and wsfed protocol).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.SingleSignOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContext.Stats">
            <summary>
            An object containing specific user stats, like stats.loginsCount.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration.CurrentClients">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration.WithAuth0">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextSsoConfiguration.WithDatabaseConnection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesContextStats">
            <summary>
            An object containing specific user stats.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesContextStats.LoginCount">
            <summary>
            The number of times the User has logged in.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Rules.RulesRequest">
            <summary>
            Represents the root object POSTed from the Rules Engine, if you follow the example.
            </summary>
            <example>
            //Add this to your Node.js Rule. Be sure to replace the secret token with a different value.
            request.post({
              url: 'http://YourWebApiEndpoint',
              json: {
            user: user,
            context: context,
            secret_token: "SOMESECRETTOKEN",
              },
              timeout: 15000
            }, function(err, response, body){
              user.persistent.your_variable = body.your_variable;
              callback(null, user, context);
            });
            </example>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesRequest.User">
            <summary>
             The user object as it comes from the identity provider.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesRequest.Context">
            <summary>
            An object containing contextual information of the current authentication transaction.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Rules.RulesRequest.SecretToken">
            <summary>
            A random string you specify to make sure the request is coming from your Auth0 Rule.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RulesConfig">
            <summary>
            Represents a rules config variable. 
            A rules-config is a variable defined by its key that carries an encrypted value, accessible only from within the rules.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RulesConfig.Key">
            <summary>
            Gets or sets the key for the rules config variable.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.RulesConfig.Value">
            <summary>
            Gets or sets the body for the rules config variable.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RulesConfigCreateOrUpdateRequest">
            <summary>
            Represents a client request to create or update a rules config variable. 
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.RuleUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.ScopeEntry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.ScopeEntry.Actions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Scopes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Users">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.UsersAppMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Clients">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.ClientKeys">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Tokens">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Scopes.Stats">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.SigningAlgorithm">
            <summary>
            Alogithm a token can be signed with.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.SigningAlgorithm.HS256">
            <summary>
            HS256 symmetrical (requires client secret)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.SigningAlgorithm.RS256">
            <summary>
            RS256 asymmetrical (requires access to JWKS public keys)
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.SigningKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SigningKey.Cert">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SigningKey.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SigningKey.Pkcs7">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantChangePassword">
            <summary>
            Change Password page customization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantChangePassword.Enabled">
            <summary>
            true to use the custom change password html, false otherwise (default: false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantChangePassword.Html">
            <summary>
            Replace default change password page with custom HTML (Liquid syntax is supported).
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantDeviceFlow">
            <summary>
            Tenant Device Flow configuration.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantDeviceFlow.Charset">
            <summary>
            The character set for generating a User Code.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantDeviceFlow.Mask">
            <summary>
            The mask used to format the generated User Code to a friendly, readable format with possible spaces or hyphens.
            </summary>
            <example>****-****</example>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantDeviceFlowCharset">
            <summary>
            The character set for generating a User Code.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantErrorPage">
            <summary>
            Tenant error page customization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantErrorPage.Html">
            <summary>
            Replace default error page with custom HTML (Liquid syntax is supported).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantErrorPage.ShowLogLink">
            <summary>
            True to show link to log as part of the default error page, false otherwise (default: true).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantErrorPage.Url">
            <summary>
            Redirect to specified url instead of show the default error page.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantFlags">
            <summary>
            Tenant flags.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.ChangePwdFlowV1">
            <summary>
            Enables the first version of the Change Password flow. We've deprecated this option and recommending a safer flow. This flag is only for backwards compatibility.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableAPIsSection">
            <summary>
            This flag enables the APIs section.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableClientConnections">
            <summary>
            This flag determines whether all current connections shall be enabled when a new client is created. Default value is true.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnablePipeline2">
            <summary>
            This flag enables advanced API Authorization scenarios.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.DisableClickjackProtectionHeaders">
            <summary>
            If true, the classic Universal Login prompts will not include additional security headers to prevent click-jacking.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableDynamicClientRegistration">
            <summary>
            Whether third-party developers can dynamically register applications for your APIs (true) or not (false). This flag enables dynamic client registration.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableCustomDomainInEmails">
            <summary>
            Whether emails sent by Auth0 for change password, verification etc. should use your verified custom domain (true) or your auth0.com sub-domain (false). Affects all emails, links, and URLs. Email will fail if the custom domain is not verified.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.AllowLegacyTokeninfoEndpoint">
            <summary>
            Whether the legacy /tokeninfo endpoint is enabled for your account (true) or unavailable (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableLegacyProfile">
            <summary>
            Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableIdTokenApi2">
            <summary>
            Whether ID tokens can be used to authorize some types of requests to API v2 (true) not not (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnablePublicSignupUserExistsError">
            <summary>
            Whether the public sign up process shows a user_exists error (true) or a generic error (false) if the user already exists.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.AllowLegacyDelegationGrantTypes">
            <summary>
            Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.AllowLegacyRoGrantTypes">
            <summary>
            Whether the legacy auth/ro endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableSSO">
            <summary>
            Whether users are prompted to confirm log in before SSO redirection (false) or are not prompted (true).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.NoDiscloseEnterpriseConnections">
            <summary>
            Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.DisableManagementApiSmsObfuscation">
            <summary>
            If true, SMS phone numbers will not be obfuscated in Management API GET calls.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnforceClientAuthenticationOnPasswordlessStart">
            <summary>
            Enforce client authentication for passwordless start
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.TrustAzureAdfsEmailVerifiedConnectionProperty">
            <summary>
            Changes email_verified behavior for Azure AD/ADFS connections when enabled. Sets email_verified to false otherwise.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.EnableAdfsWaadEmailVerification">
            <summary>
            Enables the email verification flow during login for Azure AD and ADFS connections
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.RevokeRefreshTokenGrant">
            <summary>
            Delete underlying grant when a Refresh Token is revoked via the Authentication API.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantFlags.RequirePushedAuthorizationRequests">
            <summary>
            Makes the use of Pushed Authorization Requests mandatory for all clients across the tenant.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantGuardianMfaPage">
            <summary>
            Guardian page customization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantGuardianMfaPage.Enabled">
            <summary>
            true to use the custom html for Guardian page, false otherwise (default: false).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantGuardianMfaPage.Html">
            <summary>
            Replace default Guardian page with custom HTML (Liquid syntax is supported).
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.SessionCookie.Mode">
            <summary>
            Behavior of the session cookie
            </summary>
            <remarks>Can be any of 'persistent' or 'non-persistent'</remarks>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantSettingsBase">
            <summary>
            Settings for a given tenant.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.ChangePassword">
            <summary>
            Change Password page customization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.GuardianMfaPage">
            <summary>
            Guardian page customization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.DefaultAudience">
            <summary>
            Default audience for API Authorization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.DefaultDirectory">
            <summary>
            Name of the connection that will be used for password grants at the token endpoint. Only the following connection types are supported: LDAP, AD, Database Connections, Passwordless, Windows Azure Active Directory, ADFS.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.ErrorPage">
            <summary>
            Tenant error page customization.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.DeviceFlow">
            <summary>
            Tenant Device Flow configuration.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.Flags">
            <summary>
            Tenant flags.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.FriendlyName">
            <summary>
            The friendly name of the tenant.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.PictureUrl">
            <summary>
            The URL of the tenant logo (recommended size: 150x150).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SupportEmail">
            <summary>
            User support email.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SupportUrl">
            <summary>
            User support URL.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.AllowedLogoutUrls">
            <summary>
            A set of URLs that are valid to redirect to after logout from Auth0.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SessionLifetime">
            <summary>
            Login session lifetime, how long the session will stay valid (unit: hours).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.IdleSessionLifetime">
            <summary>
            Force a user to login after they have been inactive for the specified number (unit: hours).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SandboxVersion">
            <summary>
            The selected sandbox version to be used for the extensibility environment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SandboxVersionsAvailable">
            <summary>
            A set of available sandbox versions for the extensibility environment.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.EnabledLocales">
            <summary>
            Supported locales for the UI.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.SessionCookie">
            <summary>
            Session cookie configuration
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.TenantSettingsBase.CustomizeMfaInPostLoginAction">
            <summary>
            Whether to enable flexible factors for MFA in the PostLogin action
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TenantSettingsUpdateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.Ticket">
            <summary>
            Represents a ticket. Tickets can be for either email verification or a password change.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Ticket.Value">
            <summary>
            The URL that represents the ticket.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.TokenEndpointAuthMethod">
            <summary>
            Authentication method for the token endpoint
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.TokenEndpointAuthMethod.None">
            <summary>
            Public client without a client secret)
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.TokenEndpointAuthMethod.ClientSecretPost">
            <summary>
            Client uses HTTP POST parameters
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.TokenEndpointAuthMethod.ClientSecretBasic">
            <summary>
            Client uses HTTP Basic
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UniversalLoginTemplate.Body">
            <summary>
            The custom page template for the new universal login experience.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UniversalLoginTemplateUpdateRequest">
            <summary>
            Request for updating the template for the New Universal Login Experience.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UniversalLoginTemplateUpdateRequest.Template">
            <summary>
            Gets or sets the custom page template for the New Universal Login Experience
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UpdateGuardianFactorBase.IsEnabled">
            <summary>
            States if this factor is enabled
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UpdateGuardianFactorRequest.Factor">
            <summary>
            The Guardian factor to update.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.User">
            <summary>
            Represents a user as returned from various APIs.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.CreatedAt">
            <summary>
            Gets or sets the date the user was created.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Identities">
            <summary>
            An array of objects with information about the user's identities. More than one will exists in case accounts are linked
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LastIpAddress">
            <summary>
            The last login IP address.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LastLogin">
            <summary>
            The last login date for this user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LastPasswordReset">
            <summary>
            Gets or sets the date the user last reset their password.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Locale">
             <summary>
            
             </summary>
             <remarks>
             Returned for the Facebook, Google, and Microsoft social providers.
             </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.LoginsCount">
            <summary>
            The number of logins for this user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.UpdatedAt">
            <summary>
            Gets or sets the date the user was last updated (modified).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.UserId">
            <summary>
            A unique identifier of the user per identity provider, same for all apps (e.g.: google-oauth2|103547991597142817347). ALWAYS GENERATED
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.ProviderAttributes">
            <summary>
            Contains a lists of all the extra provider specific user attributes over and above those contained in the <a href="https://auth0.com/docs/user-profile/normalized">normalized user profile</a>.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.User.Multifactor">
            <summary>
            Multifactor settings.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserAccountJwtLinkRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountJwtLinkRequest.LinkWith">
            <summary>
            Gets or sets the JWT of the secondary account being linked.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserAccountLinkRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountLinkRequest.Provider">
            <summary>
            Gets or sets the type of identity provider of the secondary account being linked.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountLinkRequest.ConnectionId">
            <summary>
            Gets or sets the identifier of the connection of the secondary account being linked.
            </summary>
            <remarks>
             This is optional and may be useful in the case of having more than a database connection for the 'auth0' provider.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserAccountLinkRequest.UserId">
            <summary>
            Gets or sets the user's identitifer of the secondary account being linked.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserBase">
            <summary>
            Contains common elements used for both constructing <see cref="T:Auth0.ManagementApi.Models.User"/>-related requests, and comprising <see cref="T:Auth0.ManagementApi.Models.User"/>-related responses.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.AppMetadata">
            <summary>
            Contains user meta data. The user has read-only access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.Email">
            <summary>
            Gets or sets the user's email address.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.EmailVerified">
            <summary>
            Gets or sets whether the user's email address is verified.
            </summary>
            <remarks>
            True if the email address is verified, otherwise false.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.PhoneNumber">
            <summary>
            Gets or sets the user's phone number.
            </summary>
            <remarks>
            This is only valid for users from SMS connections.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.PhoneVerified">
            <summary>
            Gets or sets whether the user's phone is verified.
            </summary>
            <remarks>
            True if the phone is verified, otherwise false.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.UserMetadata">
            <summary>
            Contains user meta data. The user has read/write access to this.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.UserName">
            <summary>
            Gets or sets the user' username.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.NickName">
            <summary>
            The Nickname of the user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.FirstName">
            <summary>
            The first name of the user (if available).
            </summary>
            <remarks>
            This is the given_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.FullName">
            <summary>
            The full name of the user (e.g.: John Foo). ALWAYS GENERATED.
            </summary>
            <remarks>
            This is the name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.LastName">
            <summary>
            The last name of the user (if available).
            </summary>
            <remarks>
            This is the family_name attribute supplied by the underlying API.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.Picture">
            <summary>
            URL pointing to the user picture (if not available, will use gravatar.com with the email). ALWAYS GENERATED
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBase.Blocked">
            <summary>
            Gets or sets whether the user is blocked. True if the user is blocked, otherwise false.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Models.UserBase.GetAppMetadata``1">
            <summary>
            Returns <see cref="P:Auth0.ManagementApi.Models.UserBase.AppMetadata"/> as specific type.
            </summary>
            <typeparam name="T">Type to be returned.</typeparam>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.UserBase.GetUserMetadata``1">
            <summary>
            Returns <see cref="P:Auth0.ManagementApi.Models.UserBase.UserMetadata"/> as specific type.
            </summary>
            <typeparam name="T">Type to be returned.</typeparam>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:Auth0.ManagementApi.Models.UserBase.SetAppMetadata``1(``0)">
            <summary>
            Set given appMetadata as <see cref="P:Auth0.ManagementApi.Models.UserBase.AppMetadata"/>.
            </summary>
            <typeparam name="T">Metadata type.</typeparam>
            <param name="appMetadata">Metadata to set.</param>
        </member>
        <member name="M:Auth0.ManagementApi.Models.UserBase.SetUserMetadata``1(``0)">
            <summary>
            Set given userMetadata as <see cref="P:Auth0.ManagementApi.Models.UserBase.UserMetadata"/>.
            </summary>
            <typeparam name="T">Metadata type.</typeparam>
            <param name="userMetadata">Metadata to set.</param>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserBlock">
            <summary>
            Represents a user block
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlock.Identifier">
            <summary>
            The identifier of the user
            </summary>
            <remarks>
            Can be the user's email address, username or phone number
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlock.Connection">
            <summary>
            The the connection for which the user is blocked
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlock.IpAddress">
            <summary>
            The blocked IP address
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserBlocks">
            <summary>
            Contains a list of blocks for a user
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserBlocks.BlockedFor">
            <summary>
            An array of the blocks for the user
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserCreateRequest">
            <summary>
            Represents the request to create a <see cref="T:Auth0.ManagementApi.Models.User"/>.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.Connection">
            <summary>
            Gets or sets the connection the user belongs to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.UserId">
            <summary>
            Gets or sets the (optional) id of the user
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.Password">
            <summary>
            Gets or sets the user's password. This is mandatory only for auth0 connection strategy.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserCreateRequest.VerifyEmail">
            <summary>
            Gets or sets whether the user's email change must be verified. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserPermission">
            <summary>
            User-specific representation of a permission, including its source(s).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserPermission.Sources">
            <summary>
            Gets or sets the source(s) of the permission.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.Confirmed">
            <summary>
            The authentication method status
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.Name">
            <summary>
            A human-readable label to identify the authentication method
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.LinkId">
            <summary>
            The ID of a linked authentication method. Linked authentication methods will be deleted together.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.PhoneNumber">
            <summary>
            Applies to phone authentication methods only. The destination phone number used to send verification codes via text and voice.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.Email">
            <summary>
            Applies to email and email-verification authentication methods only. The email address used to send verification messages.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.KeyId">
            <summary>
            Applies to webauthn authentication methods only. The ID of the generated credential.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.PublicKey">
            <summary>
            Applies to webauthn authentication methods only. The public key.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.CreatedAt">
            <summary>
            Authenticator creation date
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.EnrolledAt">
            <summary>
            Enrollment date
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.LastAuthAt">
            <summary>
            Last authentication
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.PreferredAuthenticationMethod">
            <summary>
            The authentication method preferred for phone authenticators.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.CredentialDeviceType">
            <summary>
            Applies to passkeys only.
            The kind of device the credential is stored on as defined by backup eligibility.
            "single_device" credentials cannot be backed up and synced to another device,
            "multi_device" credentials can be backed up if enabled by the end-user.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.CredentialBackedUp">
            <summary>
            Applies to passkeys only.
            Whether the credential was backed up.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.IdentityUserId">
            <summary>
            Applies to passkeys only.
            The ID of the user identity linked with the authentication method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethod.UserAgent">
            <summary>
            Applies to passkeys only.
            The user-agent of the browser used to create the passkey.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodBase.Id">
            <summary>
            The ID of the authentication method (auto generated)
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodBase.Type">
            <summary>
            The type of the authentication method
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.Type">
            <summary>
            The type of the authentication method
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.Name">
            <summary>
            A human-readable label to identify the authentication method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.TOTPSecret">
            <summary>
            Base32 encoded secret for TOTP generation.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.PhoneNumber">
            <summary>
            Applies to phone authentication methods only. The destination phone number used to send verification codes via text and voice.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.Email">
            <summary>
            Applies to email authentication methods only. The email address used to send verification messages.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.PreferredAuthenticationMethod">
            <summary>
            Preferred phone authentication method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.KeyId">
            <summary>
            Applies to email webauthn authenticators only. The id of the credential.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.PublicKey">
            <summary>
            Applies to email webauthn authenticators only. The public key.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodCreateRequest.RelyingPartyIdentifier">
            <summary>
            Applies to email webauthn authenticators only. The relying party identifier.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest.Type">
            <summary>
            The type of the authentication method
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest.Name">
            <summary>
            A human-readable label to identify the authentication method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest.PhoneNumber">
            <summary>
            Applies to phone authentication methods only. The destination phone number used to send verification codes via text and voice.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest.Email">
            <summary>
            Applies to email authentication methods only. The email address used to send verification messages.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodsUpdateRequest.PreferredAuthenticationMethod">
            <summary>
            The preferred authentication method for phone authentication method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodUpdateRequest.Name">
            <summary>
            A human-readable label to identify the authentication method.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.Users.AuthenticationMethodUpdateRequest.PreferredAuthenticationMethod">
            <summary>
            The preferred authentication method for phone authentication method.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UsersExportsJobField">
            <summary>
            Contains details of a field to be included in the users exports job
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UsersExportsJobField.Name">
            <summary>
            Name of the field in the profile.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UsersExportsJobField.ExportAs">
            <summary>
            Export the field using a different name as the one defined in the profile.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UsersExportsJobFormat">
            <summary>
            Enum used to define the expected format for the users exports job
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.UsersExportsJobFormat.CSV">
            <summary>
            Export the users using the CSV format.
            </summary>
        </member>
        <member name="F:Auth0.ManagementApi.Models.UsersExportsJobFormat.JSON">
            <summary>
            Export the users using the JSON format.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UsersExportsJobRequest">
            <summary>
            Contains details for creating a users exports job.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UsersExportsJobRequest.ConnectionId">
            <summary>
            The connection identifier.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UsersExportsJobRequest.Format">
            <summary>
            Format of the exported file.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UsersExportsJobRequest.Limit">
            <summary>
            Limit the number of records.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UsersExportsJobRequest.Fields">
            <summary>
            List of fields to be included in the export. Defaults to a predefined set of fields.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.UserUpdateRequest">
            <summary>
            Represents the request to update a <see cref="T:Auth0.ManagementApi.Models.User"/>.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.Connection">
            <summary>
            Gets or sets the connection the user belongs to.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.Password">
            <summary>
            Gets or sets the user's password. This is mandatory on non-SMS connections.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.VerifyEmail">
            <summary>
            Gets or sets whether the user's email change must be verified. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.VerifyPassword">
            <summary>
            Gets or sets whether the user's password change needs to be verified via email. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.VerifyPhoneNumber">
            <summary>
            Gets or sets whether the user's phone number change needs to be verified via email. True if it must be verified, otherwise false.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.UserUpdateRequest.ClientId">
            <summary>
            Gets or sets the Auth0 clientID. Only useful when updating the email.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Models.VerifyEmailJobRequest">
            <summary>
            Contains details for sending an email address verification link.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.VerifyEmailJobRequest.UserId">
            <summary>
            The identifier of the user to whom the email will be sent.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.VerifyEmailJobRequest.ClientId">
            <summary>
            The id of the client, if not provided the global one will be used
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.VerifyEmailJobRequest.Identity">
            <summary>
            The primary identity to verify when using social, enterprise, or passwordless connections.
            It is also required to verify secondary identities.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Models.VerifyEmailJobRequest.OrganizationId">
            <summary>
            ID of the organization.
            </summary>
            <remarks>
            If provided, the organization_id and organization_name will be included as query arguments in the link back to the application.
            </remarks>
        </member>
        <member name="T:Auth0.ManagementApi.Paging.CheckpointPagedList`1">
            List that contains items of <typeparamref name="T"/> as well as metadata
            about which page of items this is and how many exist.
            <typeparam name="T">Type of item to list.</typeparam>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.CheckpointPagedList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that is empty.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.CheckpointPagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.CheckpointPagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},Auth0.ManagementApi.Paging.CheckpointPagingInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <param name="paging">Information about the current page of information contained in the list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.CheckpointPagedList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that is empty.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.CheckpointPagedList`1.Paging">
            <inheritdoc />
        </member>
        <member name="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo">
            <summary>
            Specifies checkpoint pagination info to use when requesting paged results.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.CheckpointPaginationInfo.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.CheckpointPaginationInfo"/> class.
            </summary>
            <param name="take">When using checkpoint pagination, the number of results per page.</param>
            <param name="from">When using checkpoint pagination, an Id from which to begin the next page of results.</param>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.CheckpointPaginationInfo.Take">
            <summary>
            When using checkpoint pagination, the number of results per page. Required to use checkpoint pagination.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.CheckpointPaginationInfo.From">
            <summary>
            When using checkpoint pagination, an Id from which to begin the next page of results.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Paging.CheckpointPagingInformation">
            <summary>
            Contains paging information that details what page a list of items
            relates to, how many more there are etc.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.CheckpointPagingInformation.Next">
            <summary>
            When using checkpoint pagination, the Id to use for supplemental paged requests.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.CheckpointPagingInformation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.CheckpointPagingInformation"/> class
            with the desired arguments.
            </summary>
            <param name="next">When using checkpoint pagination, the Id one should use for supplemental requests to receive more results.</param>
        </member>
        <member name="T:Auth0.ManagementApi.Paging.ICheckpointPagedList`1">
            <summary>
            Interface for a list that contains items of <typeparamref name="T"/> as well as metadata
            about which page of items this is and how many exist.
            </summary>
            <typeparam name="T">Type of item to list.</typeparam>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.ICheckpointPagedList`1.Paging">
            <summary>
            Information about how many items exist, which page this is
            etc.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Paging.IPagedList`1">
            <summary>
            Interface for a list that contains items of <typeparamref name="T"/> as well as metadata
            about which page of items this is and how many exist.
            </summary>
            <typeparam name="T">Type of item to list.</typeparam>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.IPagedList`1.Paging">
            <summary>
            Information about how many items exist, which page this is
            etc.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Paging.PagedList`1">
            List that contains items of <typeparamref name="T"/> as well as metadata
            about which page of items this is and how many exist.
            <typeparam name="T">Type of item to list.</typeparam>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.PagedList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that is empty.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},Auth0.ManagementApi.Paging.PagingInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <param name="paging">Information about the current page of information contained in the list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.PagedList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagedList`1"/> class that is empty.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PagedList`1.Paging">
            <inheritdoc />
        </member>
        <member name="T:Auth0.ManagementApi.Paging.PaginationInfo">
            <summary>
            Specifies pagination info to use when requesting paged results.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.PaginationInfo.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PaginationInfo"/> class.
            </summary>
            <param name="pageNo">Page index of the results to return. First page is 0.</param>
            <param name="perPage">Number of results per page.</param>
            <param name="includeTotals">Whether to return the complete total result count (true) or not (false).</param>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PaginationInfo.IncludeTotals">
            <summary>
            Return results with a total result count (true) or with no totals (false, default).
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PaginationInfo.PerPage">
            <summary>
            Number of results per page.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PaginationInfo.PageNo">
            <summary>
            Page index of the results to return. First page is 0.
            </summary>
        </member>
        <member name="T:Auth0.ManagementApi.Paging.PagingInformation">
            <summary>
            Contains paging information that details what page a list of items
            relates to, how many more there are etc.
            </summary>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PagingInformation.Length">
            <summary>
            Number of items actually returned.
            </summary>
            <remarks>
            This is either the `per_page` you requested if there
            are more results or a number smaller than that if this
            is the last page of results and there are no more to 
            page through.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PagingInformation.Limit">
            <summary>
            Maximum number of items requested.
            </summary>
            <remarks>
            This is the `per_page` you requested.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PagingInformation.Start">
            <summary>
            Start index into the number of items.
            </summary>
            <remarks>
            This is the `page` you requested multiplied by the `per_page`.
            </remarks>
        </member>
        <member name="P:Auth0.ManagementApi.Paging.PagingInformation.Total">
            <summary>
            Total number of items available on the server.
            </summary>
        </member>
        <member name="M:Auth0.ManagementApi.Paging.PagingInformation.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Auth0.ManagementApi.Paging.PagingInformation"/> class
            with the desired arguments.
            </summary>
            <param name="start">Start index into the number of items.</param>
            <param name="limit">Maximum number of items requested.</param>
            <param name="length">Number of items actually returned.</param>
            <param name="total">Total number of items available on the server.</param>
        </member>
    </members>
</doc>
